<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="Data-class" timestamp="2023-03-21T15:47:52Z" hostname="7fd809e644a4" tests="54" skipped="0" failures="0" errors="0" time="0.519">
    <testcase time="0.022" classname="Data_class" name=".GeneralData_works_as_expected"/>
    <testcase time="0.0229999999999999" classname="Data_class" name=".GeneralData_works_as_expected"/>
    <testcase time="0.046" classname="Data_class" name=".GeneralData_works_as_expected"/>
    <testcase time="0.00600000000000001" classname="Data_class" name=".Data_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="Data_class" name=".Data_works_as_expected"/>
    <testcase time="0.00900000000000012" classname="Data_class" name=".Data_works_as_expected"/>
    <testcase time="0.0129999999999999" classname="Data_class" name="Data_object_can_be_created_with_user_constructor_Data"/>
    <testcase time="0.002" classname="Data_class" name="Data_object_can_be_created_with_user_constructor_Data"/>
    <testcase time="0.00700000000000012" classname="Data_class" name="Data_object_can_be_created_with_user_constructor_Data"/>
    <testcase time="0.0209999999999999" classname="Data_class" name="Data_object_can_be_created_with_custom_values"/>
    <testcase time="0.00100000000000011" classname="Data_class" name="Data_object_can_be_created_with_custom_values"/>
    <testcase time="0.0149999999999999" classname="Data_class" name="Data_object_can_be_created_with_custom_values"/>
    <testcase time="0.0269999999999999" classname="Data_class" name="Data_constructor_handles_default_IDs_as_expected"/>
    <testcase time="0.002" classname="Data_class" name="Data_constructor_handles_default_IDs_as_expected"/>
    <testcase time="0.00600000000000001" classname="Data_class" name="Data_constructor_handles_default_IDs_as_expected"/>
    <testcase time="0.018" classname="Data_class" name="Data_constructor_works_as_expected_without_cohort_and_no_placebo"/>
    <testcase time="0.00100000000000011" classname="Data_class" name="Data_constructor_works_as_expected_without_cohort_and_no_placebo"/>
    <testcase time="0.00600000000000001" classname="Data_class" name="Data_constructor_works_as_expected_without_cohort_and_no_placebo"/>
    <testcase time="0.00600000000000001" classname="Data_class" name=".DataDual_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="Data_class" name=".DataDual_works_as_expected"/>
    <testcase time="0.00700000000000012" classname="Data_class" name=".DataDual_works_as_expected"/>
    <testcase time="0.02" classname="Data_class" name="DataDual_object_can_be_created_with_user_constructor_DataDual"/>
    <testcase time="0.00099999999999989" classname="Data_class" name="DataDual_object_can_be_created_with_user_constructor_DataDual"/>
    <testcase time="0.00600000000000001" classname="Data_class" name="DataDual_object_can_be_created_with_user_constructor_DataDual"/>
    <testcase time="0.0210000000000001" classname="Data_class" name="DataDual_object_can_be_created_with_custom_values"/>
    <testcase time="0.002" classname="Data_class" name="DataDual_object_can_be_created_with_custom_values"/>
    <testcase time="0.00600000000000001" classname="Data_class" name="DataDual_object_can_be_created_with_custom_values"/>
    <testcase time="0.00599999999999978" classname="Data_class" name=".DataParts_works_as_expected"/>
    <testcase time="0.00100000000000011" classname="Data_class" name=".DataParts_works_as_expected"/>
    <testcase time="0.00800000000000001" classname="Data_class" name=".DataParts_works_as_expected"/>
    <testcase time="0.0249999999999999" classname="Data_class" name="DataParts_object_can_be_created_with_user_constructor_DataParts"/>
    <testcase time="0.00100000000000011" classname="Data_class" name="DataParts_object_can_be_created_with_user_constructor_DataParts"/>
    <testcase time="0.0069999999999999" classname="Data_class" name="DataParts_object_can_be_created_with_user_constructor_DataParts"/>
    <testcase time="0.02" classname="Data_class" name="DataParts_object_can_be_created_with_custom_values"/>
    <testcase time="0.002" classname="Data_class" name="DataParts_object_can_be_created_with_custom_values"/>
    <testcase time="0.00700000000000012" classname="Data_class" name="DataParts_object_can_be_created_with_custom_values"/>
    <testcase time="0.00499999999999989" classname="Data_class" name=".DataMixture_works_as_expected"/>
    <testcase time="0.002" classname="Data_class" name=".DataMixture_works_as_expected"/>
    <testcase time="0.00800000000000001" classname="Data_class" name=".DataMixture_works_as_expected"/>
    <testcase time="0.02" classname="Data_class" name="DataMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.002" classname="Data_class" name="DataMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000001" classname="Data_class" name="DataMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0189999999999999" classname="Data_class" name="DataMixture_object_can_be_created_with_custom_values"/>
    <testcase time="0.002" classname="Data_class" name="DataMixture_object_can_be_created_with_custom_values"/>
    <testcase time="0.00600000000000001" classname="Data_class" name="DataMixture_object_can_be_created_with_custom_values"/>
    <testcase time="0.00600000000000001" classname="Data_class" name=".DataDA_works_as_expected"/>
    <testcase time="0.002" classname="Data_class" name=".DataDA_works_as_expected"/>
    <testcase time="0.00700000000000012" classname="Data_class" name=".DataDA_works_as_expected"/>
    <testcase time="0.0209999999999999" classname="Data_class" name="DataDA_object_can_be_created_with_user_constructor_DataDA"/>
    <testcase time="0.00100000000000011" classname="Data_class" name="DataDA_object_can_be_created_with_user_constructor_DataDA"/>
    <testcase time="0.0069999999999999" classname="Data_class" name="DataDA_object_can_be_created_with_user_constructor_DataDA"/>
    <testcase time="0.0230000000000001" classname="Data_class" name="DataDA_object_can_be_created_with_custom_values"/>
    <testcase time="0.002" classname="Data_class" name="DataDA_object_can_be_created_with_custom_values"/>
    <testcase time="0.0069999999999999" classname="Data_class" name="DataDA_object_can_be_created_with_custom_values"/>
  </testsuite>
  <testsuite name="Data-methods" timestamp="2023-03-21T15:47:53Z" hostname="7fd809e644a4" tests="83" skipped="7" failures="0" errors="0" time="2.871">
    <testcase time="0.267" classname="Data_methods" name="Plot_works_as_expected_for_Data_object_with_placebo">
      <skipped message="Reason: On CRAN ('test-Data-methods.R:7')"/>
    </testcase>
    <testcase time="0.248" classname="Data_methods" name="Plot_works_as_expected_for_Data_object_with_placebo_and_blinding">
      <skipped message="Reason: On CRAN ('test-Data-methods.R:14')"/>
    </testcase>
    <testcase time="0.157" classname="Data_methods" name="Plot_works_for_Data_object_with_placebo_blinding_and_no_legend">
      <skipped message="Reason: On CRAN ('test-Data-methods.R:21')"/>
    </testcase>
    <testcase time="0.371" classname="Data_methods" name="Plot_works_as_expected_for_DataDual_object_with_placebo">
      <skipped message="Reason: On CRAN ('test-Data-methods.R:32')"/>
    </testcase>
    <testcase time="0.298" classname="Data_methods" name="Plot_works_for_DataDual_object_with_placebo_and_blinding">
      <skipped message="Reason: On CRAN ('test-Data-methods.R:39')"/>
    </testcase>
    <testcase time="0.369" classname="Data_methods" name="Plot_works_as_expected_for_DataDA_object_with_placebo">
      <skipped message="Reason: On CRAN ('test-Data-methods.R:50')"/>
    </testcase>
    <testcase time="0.359" classname="Data_methods" name="Plot_works_for_DataDA_object_with_placebo_and_blinding">
      <skipped message="Reason: On CRAN ('test-Data-methods.R:57')"/>
    </testcase>
    <testcase time="0.0249999999999999" classname="Data_methods" name="Update_of_Data_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="Update_of_Data_works_as_expected"/>
    <testcase time="0.0100000000000002" classname="Data_methods" name="Update_of_Data_works_as_expected"/>
    <testcase time="0.0260000000000002" classname="Data_methods" name="Update_of_empty_Data_works_as_expected"/>
    <testcase time="0.00599999999999934" classname="Data_methods" name="Update_of_empty_Data_works_as_expected"/>
    <testcase time="0.00400000000000045" classname="Data_methods" name="Update_of_empty_Data_works_as_expected"/>
    <testcase time="0.0190000000000001" classname="Data_methods" name="Update_of_Data_works_for_empty_update"/>
    <testcase time="0.0169999999999995" classname="Data_methods" name="Update_of_Data_works_when_doses_are_added_to_the_old_cohort"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="Update_of_Data_works_when_doses_are_added_to_the_old_cohort"/>
    <testcase time="0.00400000000000045" classname="Data_methods" name="Update_of_Data_works_when_doses_are_added_to_the_old_cohort"/>
    <testcase time="0.0229999999999997" classname="Data_methods" name="Update_of_Data_throws_the_error_for_a_dose_x_out_of_the_grid"/>
    <testcase time="0.0220000000000002" classname="Data_methods" name="Update_of_Data_no_error_for_non_valid_update_and_validation_off"/>
    <testcase time="0.0220000000000002" classname="Data_methods" name="Update_of_DataParts_works_as_expected"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="Update_of_DataParts_works_as_expected"/>
    <testcase time="0.00400000000000045" classname="Data_methods" name="Update_of_DataParts_works_as_expected"/>
    <testcase time="0.0209999999999999" classname="Data_methods" name="Update_of_DataParts_works_as_expected"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="Update_of_DataParts_works_as_expected"/>
    <testcase time="0.00400000000000045" classname="Data_methods" name="Update_of_DataParts_works_as_expected"/>
    <testcase time="0.0209999999999999" classname="Data_methods" name="Update_of_DataParts_works_no_DLT_and_x_eq_max_of_part1Ladder"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="Update_of_DataParts_works_no_DLT_and_x_eq_max_of_part1Ladder"/>
    <testcase time="0.00400000000000045" classname="Data_methods" name="Update_of_DataParts_works_no_DLT_and_x_eq_max_of_part1Ladder"/>
    <testcase time="0.0259999999999998" classname="Data_methods" name="Update_of_DataDual_works_as_expected"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="Update_of_DataDual_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="Update_of_DataDual_works_as_expected"/>
    <testcase time="0.0209999999999999" classname="Data_methods" name="Update_of_DataDA_works_as_expected"/>
    <testcase time="0.00700000000000056" classname="Data_methods" name="Update_of_DataDA_works_as_expected"/>
    <testcase time="0.00399999999999956" classname="Data_methods" name="Update_of_DataDA_works_as_expected"/>
    <testcase time="0.0270000000000001" classname="Data_methods" name="Update_of_DataDA_works_for_empty_update_of_empty_object"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="Update_of_DataDA_works_for_empty_update_of_empty_object"/>
    <testcase time="0.00400000000000045" classname="Data_methods" name="Update_of_DataDA_works_for_empty_update_of_empty_object"/>
    <testcase time="0.0199999999999996" classname="Data_methods" name="Update_of_DataDA_works_when_no_update_of_non_empty_object"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="Update_of_DataDA_works_when_no_update_of_non_empty_object"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="Update_of_DataDA_works_when_no_update_of_non_empty_object"/>
    <testcase time="0.0280000000000005" classname="Data_methods" name="Update_of_DataDA_throws_the_error_for_empty_trialtime"/>
    <testcase time="0.0199999999999996" classname="Data_methods" name="getEff_DataDual_works_as_expected"/>
    <testcase time="0.0200000000000005" classname="Data_methods" name="getEff_DataDual_works_as_expected_no_dlt"/>
    <testcase time="0.0129999999999999" classname="Data_methods" name="getEff_DataDual_works_as_expected_no_DLT_"/>
    <testcase time="0.0119999999999996" classname="Data_methods" name="getEff_DataDual_works_as_expected_no_DLT_no_dlt"/>
    <testcase time="0.0120000000000005" classname="Data_methods" name="getEff_DataDual_works_as_expected_DLT_only_"/>
    <testcase time="0.0119999999999996" classname="Data_methods" name="getEff_DataDual_works_as_expected_DLT_only_no_dlt"/>
    <testcase time="0.00900000000000034" classname="Data_methods" name="ngrid_throws_the_error_for_non_valid_ignore_placebo"/>
    <testcase time="0.0110000000000001" classname="Data_methods" name="ngrid_throws_the_error_for_non_valid_ignore_placebo"/>
    <testcase time="0.0179999999999998" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="ngrid_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.016" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00599999999999934" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00500000000000078" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00599999999999934" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="ngrid_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.0250000000000004" classname="Data_methods" name="dose_grid_range_throws_the_error_for_non_valid_ignore_placebo"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="dose_grid_range_throws_the_error_for_non_valid_ignore_placebo"/>
    <testcase time="0.0170000000000003" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00500000000000078" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_with_placebo_in_grid"/>
    <testcase time="0.0170000000000003" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00400000000000045" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.0119999999999996" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00600000000000023" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00699999999999967" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
    <testcase time="0.00499999999999989" classname="Data_methods" name="dose_grid_range_Data_works_as_expected_without_placebo_in_grid"/>
  </testsuite>
  <testsuite name="Data-validity" timestamp="2023-03-21T15:47:55Z" hostname="7fd809e644a4" tests="26" skipped="0" failures="0" errors="0" time="0.487">
    <testcase time="0.0209999999999999" classname="Data_validity" name="h_doses_unique_per_cohort_returns_TRUE_for_unique_doses"/>
    <testcase time="0.00400000000000045" classname="Data_validity" name="h_doses_unique_per_cohort_returns_TRUE_for_unique_doses"/>
    <testcase time="0.00499999999999989" classname="Data_validity" name="h_doses_unique_per_cohort_returns_FALSE_for_non_unique_doses"/>
    <testcase time="0.00399999999999956" classname="Data_validity" name="h_doses_unique_per_cohort_returns_FALSE_for_non_unique_doses"/>
    <testcase time="0.0170000000000003" classname="Data_validity" name="v_general_data_passes_for_valid_object"/>
    <testcase time="0.0179999999999998" classname="Data_validity" name="v_general_data_returns_expected_messages_for_non_valid_object"/>
    <testcase time="0.0180000000000007" classname="Data_validity" name="v_data_passes_for_valid_object"/>
    <testcase time="0.0249999999999995" classname="Data_validity" name="v_data_returns_error_when_only_placebo_in_cohort"/>
    <testcase time="0.0179999999999998" classname="Data_validity" name="v_data_error_when_multiple_different_doses_in_a_cohort"/>
    <testcase time="0.0180000000000007" classname="Data_validity" name="v_data_returns_error_when_first_xLevel_does_not_match_x"/>
    <testcase time="0.0199999999999996" classname="Data_validity" name="v_data_dual_passes_for_valid_object"/>
    <testcase time="0.0200000000000005" classname="Data_validity" name="v_data_dual_returns_error_for_biomarker_of_wrong_length"/>
    <testcase time="0.0199999999999996" classname="Data_validity" name="v_data_parts_passes_for_valid_object"/>
    <testcase time="0.0259999999999998" classname="Data_validity" name="v_data_parts_error_when_part_of_wrong_length_and_values"/>
    <testcase time="0.0200000000000005" classname="Data_validity" name="v_data_parts_error_when_nextPart_of_wrong_len_vals_order"/>
    <testcase time="0.0209999999999999" classname="Data_validity" name="v_data_parts_error_when_part1Ladder_unsorted_non_unique"/>
    <testcase time="0.0199999999999996" classname="Data_validity" name="v_data_parts_error_when_part1Ladder_has_wrong_values"/>
    <testcase time="0.0200000000000005" classname="Data_validity" name="v_data_mixture_passes_for_valid_object"/>
    <testcase time="0.0199999999999996" classname="Data_validity" name="v_data_mixture_error_when_xshare_is_of_wrong_length"/>
    <testcase time="0.0270000000000001" classname="Data_validity" name="v_data_mixture_error_when_xshare_has_wrong_values"/>
    <testcase time="0.0200000000000005" classname="Data_validity" name="v_data_mixture_error_for_yshare_of_wrong_length_and_vals."/>
    <testcase time="0.0189999999999992" classname="Data_validity" name="v_data_mixture_error_for_nObsshare_of_wrong_length"/>
    <testcase time="0.0200000000000005" classname="Data_validity" name="v_data_da_passes_for_valid_object"/>
    <testcase time="0.0199999999999996" classname="Data_validity" name="v_data_da_error_for_Tmax_of_wrong_length_negative_values"/>
    <testcase time="0.0250000000000004" classname="Data_validity" name="v_data_da_error_for_u_of_wrong_length_and_values"/>
    <testcase time="0.0209999999999999" classname="Data_validity" name="v_data_da_error_for_t0_of_wrong_length_negative_values"/>
  </testsuite>
  <testsuite name="Design-methods" timestamp="2023-03-21T15:47:56Z" hostname="7fd809e644a4" tests="12" skipped="2" failures="0" errors="0" time="1.236">
    <testcase time="0.902" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_for_empty_data"/>
    <testcase time="0.00499999999999989" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_for_empty_data"/>
    <testcase time="0.00400000000000045" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_for_empty_data"/>
    <testcase time="0.00399999999999956" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_for_empty_data"/>
    <testcase time="0.00499999999999989" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_for_empty_data"/>
    <testcase time="0.0259999999999998" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_for_empty_data">
      <skipped message="Reason: On CRAN ('test-Design-methods.R:48')"/>
    </testcase>
    <testcase time="0.264" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_with_a_dataset"/>
    <testcase time="0.00499999999999989" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_with_a_dataset"/>
    <testcase time="0.00400000000000045" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_with_a_dataset"/>
    <testcase time="0.00499999999999989" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_with_a_dataset"/>
    <testcase time="0.00399999999999956" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_with_a_dataset"/>
    <testcase time="0.00800000000000001" classname="Design_methods" name="NextBestInfTheory_produces_consistent_results_with_a_dataset">
      <skipped message="Reason: On CRAN ('test-Design-methods.R:93')"/>
    </testcase>
  </testsuite>
  <testsuite name="McmcOptions-class" timestamp="2023-03-21T15:47:57Z" hostname="7fd809e644a4" tests="15" skipped="0" failures="0" errors="0" time="0.07">
    <testcase time="0.016" classname="McmcOptions_class" name=".McmcOptions_works_as_expected"/>
    <testcase time="0.00100000000000033" classname="McmcOptions_class" name=".McmcOptions_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="McmcOptions_class" name=".McmcOptions_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="McmcOptions_class" name=".McmcOptions_works_as_expected_with_custom_values"/>
    <testcase time="0.00100000000000033" classname="McmcOptions_class" name=".McmcOptions_works_as_expected_with_custom_values"/>
    <testcase time="0.00499999999999989" classname="McmcOptions_class" name=".McmcOptions_works_as_expected_with_custom_values"/>
    <testcase time="0.00599999999999934" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00100000000000033" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999989" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_custom_values"/>
    <testcase time="0.000999999999999446" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_custom_values"/>
    <testcase time="0.00500000000000078" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_custom_values"/>
    <testcase time="0.00599999999999934" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_custom_RNG_and_NA_values"/>
    <testcase time="0.00100000000000033" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_custom_RNG_and_NA_values"/>
    <testcase time="0.00499999999999989" classname="McmcOptions_class" name="McmcOptions_object_can_be_created_with_custom_RNG_and_NA_values"/>
  </testsuite>
  <testsuite name="McmcOptions-methods" timestamp="2023-03-21T15:47:57Z" hostname="7fd809e644a4" tests="3" skipped="0" failures="0" errors="0" time="0.031">
    <testcase time="0.0110000000000001" classname="McmcOptions_methods" name="Number_of_samples_is_correctly_computed"/>
    <testcase time="0.00699999999999967" classname="McmcOptions_methods" name="Sample_should_be_saved_as_expected_for_a_given_iteration_number"/>
    <testcase time="0.0129999999999999" classname="McmcOptions_methods" name="Sample_should_not_be_saved_for_a_given_iteration_number"/>
  </testsuite>
  <testsuite name="McmcOptions-validity" timestamp="2023-03-21T15:47:57Z" hostname="7fd809e644a4" tests="4" skipped="0" failures="0" errors="0" time="0.04">
    <testcase time="0.0130000000000008" classname="McmcOptions_validity" name="v_mcmc_options_passes_for_valid_object"/>
    <testcase time="0.00899999999999945" classname="McmcOptions_validity" name="v_mcmc_options_returns_error_messages_for_non_valid_object"/>
    <testcase time="0.00900000000000034" classname="McmcOptions_validity" name="v_mcmc_options_returns_error_messages_non_valid_RNG_spec"/>
    <testcase time="0.00899999999999945" classname="McmcOptions_validity" name="v_mcmc_options_returns_error_message_for_wrong_step"/>
  </testsuite>
  <testsuite name="Model-class" timestamp="2023-03-21T15:47:57Z" hostname="7fd809e644a4" tests="194" skipped="58" failures="0" errors="0" time="5.772">
    <testcase time="0.0230000000000006" classname="Model_class" name=".GeneralModel_works_as_expected"/>
    <testcase time="0.000999999999999446" classname="Model_class" name=".GeneralModel_works_as_expected"/>
    <testcase time="0.00400000000000045" classname="Model_class" name=".GeneralModel_works_as_expected"/>
    <testcase time="0.00999999999999979" classname="Model_class" name=".ModelLogNormal_works_as_expected"/>
    <testcase time="0.00100000000000033" classname="Model_class" name=".ModelLogNormal_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="Model_class" name=".ModelLogNormal_works_as_expected"/>
    <testcase time="0.00899999999999945" classname="Model_class" name="ModelLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00200000000000067" classname="Model_class" name="ModelLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999989" classname="Model_class" name="ModelLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0110000000000001" classname="Model_class" name="LogisticNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="LogisticNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Model_class" name="LogisticNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0439999999999996" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticNormal_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:77')"/>
    </testcase>
    <testcase time="0.0339999999999998" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticNormal_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:86')"/>
    </testcase>
    <testcase time="0.0179999999999998" classname="Model_class" name="LogisticLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00200000000000067" classname="Model_class" name="LogisticLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999989" classname="Model_class" name="LogisticLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0350000000000001" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticLogNormal_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:112')"/>
    </testcase>
    <testcase time="0.032" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticLogNormal_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:121')"/>
    </testcase>
    <testcase time="0.0169999999999995" classname="Model_class" name="LogisticLogNormalSub_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00100000000000033" classname="Model_class" name="LogisticLogNormalSub_object_can_be_created_with_user_constructor"/>
    <testcase time="0.016" classname="Model_class" name="LogisticLogNormalSub_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0339999999999998" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticLogNormalSub_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:147')"/>
    </testcase>
    <testcase time="0.0309999999999997" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticLogNormalSub_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:156')"/>
    </testcase>
    <testcase time="0.0200000000000005" classname="Model_class" name="ProbitLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.000999999999999446" classname="Model_class" name="ProbitLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999979" classname="Model_class" name="ProbitLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0370000000000008" classname="Model_class" name="MCMC_computes_correct_values_for_ProbitLogNormal_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:182')"/>
    </testcase>
    <testcase time="0.0409999999999995" classname="Model_class" name="MCMC_computes_correct_values_for_ProbitLogNormal_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:191')"/>
    </testcase>
    <testcase time="0.0200000000000005" classname="Model_class" name="ProbitLogNormalRel_object_can_be_created_with_user_constructor"/>
    <testcase time="0.000999999999999446" classname="Model_class" name="ProbitLogNormalRel_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999979" classname="Model_class" name="ProbitLogNormalRel_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0389999999999997" classname="Model_class" name="MCMC_computes_correct_values_for_ProbitLogNormalRel_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:217')"/>
    </testcase>
    <testcase time="0.0330000000000004" classname="Model_class" name="MCMC_computes_correct_values_for_ProbitLogNormalRel_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:226')"/>
    </testcase>
    <testcase time="0.0220000000000002" classname="Model_class" name="LogisticKadane_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="LogisticKadane_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0110000000000001" classname="Model_class" name="LogisticKadane_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0339999999999998" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticKadane_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:252')"/>
    </testcase>
    <testcase time="0.0300000000000002" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticKadane_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:261')"/>
    </testcase>
    <testcase time="0.0190000000000001" classname="Model_class" name="LogisticKadaneBetaGamma_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="LogisticKadaneBetaGamma_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0169999999999995" classname="Model_class" name="LogisticKadaneBetaGamma_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0390000000000006" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticKadaneBetaGamma_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:291')"/>
    </testcase>
    <testcase time="0.032" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticKadaneBetaGamma_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:300')"/>
    </testcase>
    <testcase time="0.0220000000000002" classname="Model_class" name="LogisticNormalMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="LogisticNormalMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999979" classname="Model_class" name="LogisticNormalMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0419999999999998" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticNormalMixture_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:327')"/>
    </testcase>
    <testcase time="0.0460000000000003" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticNormalMixture_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:336')"/>
    </testcase>
    <testcase time="0.0250000000000004" classname="Model_class" name="LogisticNormalFixedMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="LogisticNormalFixedMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0139999999999993" classname="Model_class" name="LogisticNormalFixedMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0660000000000007" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticNormalFixedMixture_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:373')"/>
    </testcase>
    <testcase time="0.0679999999999996" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticNormalFixedMixture_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:385')"/>
    </testcase>
    <testcase time="0.0200000000000005" classname="Model_class" name="LogisticLogNormalMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="LogisticLogNormalMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0140000000000002" classname="Model_class" name="LogisticLogNormalMixture_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0419999999999998" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticLogNormalMixture_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:413')"/>
    </testcase>
    <testcase time="0.0439999999999996" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticLogNormalMixture_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:422')"/>
    </testcase>
    <testcase time="0.0200000000000005" classname="Model_class" name="DualEndpoint_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="DualEndpoint_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0110000000000001" classname="Model_class" name="DualEndpoint_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0110000000000001" classname="Model_class" name="DualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="DualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="DualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0199999999999996" classname="Model_class" name="DualEndpointRW_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.00199999999999978" classname="Model_class" name="DualEndpointRW_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0180000000000007" classname="Model_class" name="DualEndpointRW_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0219999999999994" classname="Model_class" name="DualEndpointRW_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00200000000000067" classname="Model_class" name="DualEndpointRW_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00699999999999967" classname="Model_class" name="DualEndpointRW_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0870000000000006" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model_fixed_params_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:463')"/>
    </testcase>
    <testcase time="0.0990000000000002" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:475')"/>
    </testcase>
    <testcase time="0.0909999999999993" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model_with_RW2">
      <skipped message="Reason: On CRAN ('test-Model-class.R:487')"/>
    </testcase>
    <testcase time="0.0999999999999996" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model_fixed_params_with_RW2">
      <skipped message="Reason: On CRAN ('test-Model-class.R:499')"/>
    </testcase>
    <testcase time="0.0679999999999996" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model_fixed_params_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:511')"/>
    </testcase>
    <testcase time="0.0800000000000001" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:523')"/>
    </testcase>
    <testcase time="0.0709999999999997" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model_with_RW2_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:535')"/>
    </testcase>
    <testcase time="0.0840000000000014" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointRW_model_fixed_params_empty_data_with_RW2">
      <skipped message="Reason: On CRAN ('test-Model-class.R:547')"/>
    </testcase>
    <testcase time="0.0359999999999996" classname="Model_class" name="MCMC_throws_the_error_for_DualEndpointRW_model_when_nGrid_1_for_RW_1"/>
    <testcase time="0.0280000000000005" classname="Model_class" name="MCMC_throws_the_error_for_DualEndpointRW_model_when_nGrid_2_for_RW_2"/>
    <testcase time="0.00699999999999967" classname="Model_class" name="MCMC_throws_the_error_for_DualEndpointRW_model_when_nGrid_2_for_RW_2"/>
    <testcase time="0.0280000000000005" classname="Model_class" name="DualEndpointBeta_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.00299999999999834" classname="Model_class" name="DualEndpointBeta_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0180000000000007" classname="Model_class" name="DualEndpointBeta_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0240000000000009" classname="Model_class" name="DualEndpointBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999889" classname="Model_class" name="DualEndpointBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0080000000000009" classname="Model_class" name="DualEndpointBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0949999999999989" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointBeta_model_with_fixed_parameters">
      <skipped message="Reason: On CRAN ('test-Model-class.R:611')"/>
    </testcase>
    <testcase time="0.0990000000000002" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointBeta_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:623')"/>
    </testcase>
    <testcase time="0.0519999999999996" classname="Model_class" name="MCMC_throws_the_error_for_DualEndpointBeta_model_when_ref_dose_beta_max_doseGrid_"/>
    <testcase time="0.0310000000000006" classname="Model_class" name="MCMC_throws_the_error_for_DualEndpointBeta_model_when_nGrid_0_"/>
    <testcase time="0.0640000000000001" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointBeta_model_with_fixed_parameters_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:658')"/>
    </testcase>
    <testcase time="0.0850000000000009" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointBeta_model_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:670')"/>
    </testcase>
    <testcase time="0.0299999999999994" classname="Model_class" name="DualEndpointEmax_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.00200000000000067" classname="Model_class" name="DualEndpointEmax_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0180000000000007" classname="Model_class" name="DualEndpointEmax_object_can_be_created_with_user_constructor_fixed_params_"/>
    <testcase time="0.0229999999999997" classname="Model_class" name="DualEndpointEmax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Model_class" name="DualEndpointEmax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00699999999999967" classname="Model_class" name="DualEndpointEmax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0890000000000004" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointEmax_model_with_fixed_parameters">
      <skipped message="Reason: On CRAN ('test-Model-class.R:698')"/>
    </testcase>
    <testcase time="0.101999999999999" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointEmax_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:710')"/>
    </testcase>
    <testcase time="0.072000000000001" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointEmax_model_with_fixed_parameters_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:722')"/>
    </testcase>
    <testcase time="0.0749999999999993" classname="Model_class" name="MCMC_computes_correct_values_for_DualEndpointEmax_model_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:734')"/>
    </testcase>
    <testcase time="0.0460000000000012" classname="Model_class" name="MCMC_throws_the_error_for_DualEndpointEmax_model_when_nGrid_0_"/>
    <testcase time="0.0169999999999995" classname="Model_class" name="LogisticIndepBeta_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.00300000000000011" classname="Model_class" name="LogisticIndepBeta_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.00699999999999967" classname="Model_class" name="LogisticIndepBeta_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.0169999999999995" classname="Model_class" name="LogisticIndepBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Model_class" name="LogisticIndepBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="LogisticIndepBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0350000000000001" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticIndepBeta_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:771')"/>
    </testcase>
    <testcase time="0.0400000000000009" classname="Model_class" name="MCMC_computes_correct_values_for_LogisticIndepBeta_model_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:780')"/>
    </testcase>
    <testcase time="0.0249999999999986" classname="Model_class" name="Effloglog_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.00300000000000011" classname="Model_class" name="Effloglog_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.0080000000000009" classname="Model_class" name="Effloglog_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.0229999999999997" classname="Model_class" name="Effloglog_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00200000000000067" classname="Model_class" name="Effloglog_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00899999999999856" classname="Model_class" name="Effloglog_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0350000000000001" classname="Model_class" name="MCMC_computes_correct_values_for_Effloglog_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:805')"/>
    </testcase>
    <testcase time="0.043000000000001" classname="Model_class" name="MCMC_computes_correct_values_for_Effloglog_model_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:814')"/>
    </testcase>
    <testcase time="0.032" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00699999999999967" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0229999999999997" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_RW2_"/>
    <testcase time="0.00300000000000011" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_RW2_"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_RW2_"/>
    <testcase time="0.0150000000000006" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.00299999999999834" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_empty_data_"/>
    <testcase time="0.0200000000000014" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_empty_data_RW2_"/>
    <testcase time="0.00399999999999956" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_empty_data_RW2_"/>
    <testcase time="0.00799999999999912" classname="Model_class" name="EffFlexi_object_can_be_created_with_user_constructor_empty_data_RW2_"/>
    <testcase time="0.0460000000000012" classname="Model_class" name="MCMC_computes_correct_values_for_EffFlexi_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:848')"/>
    </testcase>
    <testcase time="0.0510000000000002" classname="Model_class" name="MCMC_computes_correct_values_for_EffFlexi_model_RW2_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:856')"/>
    </testcase>
    <testcase time="0.0469999999999988" classname="Model_class" name="MCMC_computes_correct_values_for_EffFlexi_model_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:864')"/>
    </testcase>
    <testcase time="0.0400000000000009" classname="Model_class" name="MCMC_computes_correct_values_for_EffFlexi_model_empty_data_RW2_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:872')"/>
    </testcase>
    <testcase time="0.0239999999999991" classname="Model_class" name="DALogisticLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999956" classname="Model_class" name="DALogisticLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0140000000000011" classname="Model_class" name="DALogisticLogNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0749999999999993" classname="Model_class" name="MCMC_computes_correct_values_for_DALogisticLogNormal_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:901')"/>
    </testcase>
    <testcase time="0.0419999999999998" classname="Model_class" name="MCMC_computes_correct_values_for_DALogisticLogNormal_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:910')"/>
    </testcase>
    <testcase time="0.0230000000000015" classname="Model_class" name="TITELogisticLogNormal_object_can_be_created_with_user_constructor_linear_weight_"/>
    <testcase time="0.00300000000000011" classname="Model_class" name="TITELogisticLogNormal_object_can_be_created_with_user_constructor_linear_weight_"/>
    <testcase time="0.0139999999999993" classname="Model_class" name="TITELogisticLogNormal_object_can_be_created_with_user_constructor_linear_weight_"/>
    <testcase time="0.016" classname="Model_class" name="TITELogisticLogNormal_object_can_be_created_with_user_constructor_adaptive_weight_"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="TITELogisticLogNormal_object_can_be_created_with_user_constructor_adaptive_weight_"/>
    <testcase time="0.016" classname="Model_class" name="TITELogisticLogNormal_object_can_be_created_with_user_constructor_adaptive_weight_"/>
    <testcase time="0.0449999999999999" classname="Model_class" name="MCMC_computes_correct_values_for_TITELogisticLogNormal_model_linear_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:935')"/>
    </testcase>
    <testcase time="0.0600000000000005" classname="Model_class" name="MCMC_computes_correct_values_for_TITELogisticLogNormal_model_linear_data_2_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:944')"/>
    </testcase>
    <testcase time="0.048" classname="Model_class" name="MCMC_computes_correct_values_for_TITELogisticLogNormal_model_linear_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:953')"/>
    </testcase>
    <testcase time="0.0510000000000002" classname="Model_class" name="MCMC_computes_correct_values_for_TITELogisticLogNormal_model_adaptive_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:962')"/>
    </testcase>
    <testcase time="0.0619999999999994" classname="Model_class" name="MCMC_computes_correct_values_for_TITELogisticLogNormal_model_adaptive_data_2_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:971')"/>
    </testcase>
    <testcase time="0.048" classname="Model_class" name="MCMC_computes_correct_values_for_TITELogisticLogNormal_model_adaptive_empty_data_">
      <skipped message="Reason: On CRAN ('test-Model-class.R:980')"/>
    </testcase>
    <testcase time="0.0199999999999996" classname="Model_class" name="OneParLogNormalPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999956" classname="Model_class" name="OneParLogNormalPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0120000000000005" classname="Model_class" name="OneParLogNormalPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="OneParLogNormalPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="OneParLogNormalPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="OneParLogNormalPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="OneParLogNormalPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0109999999999992" classname="Model_class" name="OneParLogNormalPrior_throws_the_error_when_dose_grid_and_skel_probs_have_diff._lengths"/>
    <testcase time="0.011000000000001" classname="Model_class" name="OneParLogNormalPrior_throws_the_error_for_not_unique_or_not_sorted_dose_grid"/>
    <testcase time="0.016" classname="Model_class" name="OneParLogNormalPrior_throws_the_error_for_not_unique_or_not_sorted_dose_grid"/>
    <testcase time="0.0129999999999999" classname="Model_class" name="OneParLogNormalPrior_throws_the_error_for_not_a_probability_values_in_skel_probs"/>
    <testcase time="0.0119999999999987" classname="Model_class" name="OneParLogNormalPrior_throws_the_error_for_not_unique_or_not_sorted_skel_probs"/>
    <testcase time="0.00900000000000034" classname="Model_class" name="OneParLogNormalPrior_throws_the_error_for_not_unique_or_not_sorted_skel_probs"/>
    <testcase time="0.0370000000000008" classname="Model_class" name="MCMC_computes_correct_values_for_OneParLogNormalPrior_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:1070')"/>
    </testcase>
    <testcase time="0.032" classname="Model_class" name="MCMC_computes_correct_values_for_OneParLogNormalPrior_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:1079')"/>
    </testcase>
    <testcase time="0.0399999999999991" classname="Model_class" name="MCMC_throws_the_error_for_OneParLogNormalPrior_model_when_xLevel_does_not_match_skel_probs_"/>
    <testcase time="0.0150000000000006" classname="Model_class" name="No_NA_is_returned_in_dose_calculations_for_OneParLogNormalPrior_model"/>
    <testcase time="0.0109999999999992" classname="Model_class" name="OneParExpPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Model_class" name="OneParExpPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0119999999999987" classname="Model_class" name="OneParExpPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="OneParExpPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="OneParExpPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00699999999999967" classname="Model_class" name="OneParExpPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Model_class" name="OneParExpPrior_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0120000000000005" classname="Model_class" name="OneParExpPrior_throws_the_error_when_dose_grid_and_skel_probs_have_diff._lengths"/>
    <testcase time="0.0109999999999992" classname="Model_class" name="OneParExpPrior_throws_the_error_for_not_unique_or_not_sorted_dose_grid"/>
    <testcase time="0.00900000000000034" classname="Model_class" name="OneParExpPrior_throws_the_error_for_not_unique_or_not_sorted_dose_grid"/>
    <testcase time="0.0180000000000007" classname="Model_class" name="OneParExpPrior_throws_the_error_for_not_a_probability_values_in_skel_probs"/>
    <testcase time="0.0129999999999999" classname="Model_class" name="OneParExpPrior_throws_the_error_for_not_unique_or_not_sorted_skel_probs"/>
    <testcase time="0.00900000000000034" classname="Model_class" name="OneParExpPrior_throws_the_error_for_not_unique_or_not_sorted_skel_probs"/>
    <testcase time="0.036999999999999" classname="Model_class" name="MCMC_computes_correct_values_for_OneParExpPrior_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:1188')"/>
    </testcase>
    <testcase time="0.032" classname="Model_class" name="MCMC_computes_correct_values_for_OneParExpPrior_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:1197')"/>
    </testcase>
    <testcase time="0.0370000000000008" classname="Model_class" name="MCMC_throws_the_error_for_OneParExpPrior_model_when_xLevel_does_not_match_skel_probs_"/>
    <testcase time="0.0169999999999995" classname="Model_class" name="No_NA_is_returned_in_dose_calculations_for_OneParExpPrior_model"/>
    <testcase time="0.0139999999999993" classname="Model_class" name="FractionalCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Model_class" name="FractionalCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0139999999999993" classname="Model_class" name="FractionalCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.984" classname="Model_class" name="MCMC_computes_correct_values_for_FractionalCRM_model">
      <skipped message="Reason: On CRAN ('test-Model-class.R:1242')"/>
    </testcase>
    <testcase time="0.0380000000000003" classname="Model_class" name="MCMC_computes_correct_values_for_FractionalCRM_model_and_empty_data">
      <skipped message="Reason: On CRAN ('test-Model-class.R:1251')"/>
    </testcase>
    <testcase time="0.0339999999999989" classname="Model_class" name="MCMC_throws_the_error_for_FractionalCRM_model_when_xLevel_does_not_match_skel_probs_"/>
  </testsuite>
  <testsuite name="Model-methods" timestamp="2023-03-21T15:48:03Z" hostname="7fd809e644a4" tests="272" skipped="2" failures="0" errors="0" time="4.23">
    <testcase time="0.0370000000000008" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.000999999999999446" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.0170000000000012" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.00199999999999889" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.00300000000000011" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.00100000000000122" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function"/>
    <testcase time="0.0129999999999999" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.00100000000000122" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.000999999999999446" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.00400000000000134" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.000999999999999446" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.00400000000000134" classname="Model_methods" name="doseFunction_GeneralModel_returns_correct_dose_function_for_matrix_param"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="doseFunction_GeneralModel_throws_the_error_when_valid_params_are_not_provided"/>
    <testcase time="0.00600000000000023" classname="Model_methods" name="doseFunction_GeneralModel_throws_the_error_when_valid_params_are_not_provided"/>
    <testcase time="0.0180000000000007" classname="Model_methods" name="doseFunction_ModelPseudo_returns_correct_dose_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_ModelPseudo_returns_correct_dose_function"/>
    <testcase time="0.00199999999999889" classname="Model_methods" name="doseFunction_ModelPseudo_returns_correct_dose_function"/>
    <testcase time="0.00400000000000134" classname="Model_methods" name="doseFunction_ModelPseudo_returns_correct_dose_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="doseFunction_ModelPseudo_returns_correct_dose_function"/>
    <testcase time="0.0190000000000001" classname="Model_methods" name="doseFunction_ModelPseudo_throws_the_error_when_no_params_are_provided"/>
    <testcase time="0.0129999999999999" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.000999999999999446" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.00500000000000078" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.000999999999999446" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.00400000000000134" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.00199999999999889" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.00400000000000134" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function"/>
    <testcase time="0.0190000000000001" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.000999999999999446" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.00200000000000067" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.00200000000000067" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.00500000000000078" classname="Model_methods" name="probFunction_GeneralModel_returns_correct_prob_function_for_matrix_param"/>
    <testcase time="0.0149999999999988" classname="Model_methods" name="probFunction_GeneralModel_throws_the_error_when_valid_params_are_not_provided"/>
    <testcase time="0.00600000000000023" classname="Model_methods" name="probFunction_GeneralModel_throws_the_error_when_valid_params_are_not_provided"/>
    <testcase time="0.0200000000000014" classname="Model_methods" name="probFunction_ModelTox_returns_correct_prob_function"/>
    <testcase time="0.00499999999999901" classname="Model_methods" name="probFunction_ModelTox_returns_correct_prob_function"/>
    <testcase time="0.000999999999999446" classname="Model_methods" name="probFunction_ModelTox_returns_correct_prob_function"/>
    <testcase time="0.00500000000000078" classname="Model_methods" name="probFunction_ModelTox_returns_correct_prob_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="probFunction_ModelTox_returns_correct_prob_function"/>
    <testcase time="0.0199999999999996" classname="Model_methods" name="probFunction_ModelTox_throws_the_error_when_no_params_are_provided"/>
    <testcase time="0.0240000000000009" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00200000000000067" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00199999999999889" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00500000000000078" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00200000000000067" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00399999999999956" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.00500000000000078" classname="Model_methods" name="efficacyFunction_ModelEff_returns_correct_efficacy_function"/>
    <testcase time="0.0289999999999999" classname="Model_methods" name="efficacyFunction_ModelEff_throws_the_error_when_no_params_are_provided"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_LogisticNormal_works_as_expected"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="dose_LogisticNormal_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0149999999999988" classname="Model_methods" name="dose_LogisticNormal_works_as_expected_for_vectors"/>
    <testcase time="0.0170000000000012" classname="Model_methods" name="dose_LogisticNormal_throws_the_error_when_x_and_samples_lengths_differ"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticNormal_throws_the_error_when_x_and_samples_lengths_differ"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticNormal_throws_the_error_when_x_and_samples_lengths_differ"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_LogisticLogNormal_works_as_expected"/>
    <testcase time="0.0170000000000012" classname="Model_methods" name="dose_LogisticLogNormal_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0149999999999988" classname="Model_methods" name="dose_LogisticLogNormal_works_as_expected_for_vectors"/>
    <testcase time="0.0170000000000012" classname="Model_methods" name="dose_LogisticLogNormal_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticLogNormal_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticLogNormal_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0199999999999996" classname="Model_methods" name="dose_LogisticLogNormalSub_works_as_expected"/>
    <testcase time="0.0140000000000011" classname="Model_methods" name="dose_LogisticLogNormalSub_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="dose_LogisticLogNormalSub_works_as_expected_for_vectors"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="dose_LogisticLogNormalSub_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticLogNormalSub_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticLogNormalSub_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_ProbitLogNormal_works_as_expected"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="dose_ProbitLogNormal_works_as_expected_for_scalar_samples"/>
    <testcase time="0.016" classname="Model_methods" name="dose_ProbitLogNormal_works_as_expected_for_vectors"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_ProbitLogNormal_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00700000000000145" classname="Model_methods" name="dose_ProbitLogNormal_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_ProbitLogNormal_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_ProbitLogNormalRel_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="Model_methods" name="dose_ProbitLogNormalRel_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_ProbitLogNormalRel_works_as_expected_for_vectors"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_ProbitLogNormalRel_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_ProbitLogNormalRel_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00700000000000145" classname="Model_methods" name="dose_ProbitLogNormalRel_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="dose_LogisticKadane_works_as_expected"/>
    <testcase time="0.020999999999999" classname="Model_methods" name="dose_LogisticKadane_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0120000000000005" classname="Model_methods" name="dose_LogisticKadane_works_as_expected_for_vectors"/>
    <testcase time="0.0140000000000011" classname="Model_methods" name="dose_LogisticKadane_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticKadane_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticKadane_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="dose_LogisticKadaneBetaGamma_works_as_expected"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="dose_LogisticKadaneBetaGamma_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0199999999999996" classname="Model_methods" name="dose_LogisticKadaneBetaGamma_works_as_expected_for_vectors"/>
    <testcase time="0.016" classname="Model_methods" name="dose_LogisticKadaneBetaGamma_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticKadaneBetaGamma_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="dose_LogisticKadaneBetaGamma_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0189999999999984" classname="Model_methods" name="dose_LogisticNormalMixture_works_as_expected"/>
    <testcase time="0.0180000000000007" classname="Model_methods" name="dose_LogisticNormalMixture_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_LogisticNormalMixture_works_as_expected_for_vectors"/>
    <testcase time="0.0190000000000001" classname="Model_methods" name="dose_LogisticNormalMixture_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticNormalMixture_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="dose_LogisticNormalMixture_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="dose_LogisticNormalFixedMixture_works_as_expected"/>
    <testcase time="0.020999999999999" classname="Model_methods" name="dose_LogisticNormalFixedMixture_works_as_expected_for_scalar_samples"/>
    <testcase time="0.027000000000001" classname="Model_methods" name="dose_LogisticNormalFixedMixture_works_as_expected_for_vectors"/>
    <testcase time="0.0229999999999997" classname="Model_methods" name="dose_LogisticNormalFixedMixture_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="dose_LogisticNormalFixedMixture_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticNormalFixedMixture_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_LogisticLogNormalMixture_is_not_implemented"/>
    <testcase time="0.0210000000000008" classname="Model_methods" name="dose_DualEndpoint_works_as_expected"/>
    <testcase time="0.00599999999999845" classname="Model_methods" name="dose_DualEndpoint_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Model_methods" name="dose_DualEndpoint_works_as_expected"/>
    <testcase time="0.0200000000000014" classname="Model_methods" name="dose_DualEndpoint_works_as_expected_for_scalar_samples"/>
    <testcase time="0.00599999999999845" classname="Model_methods" name="dose_DualEndpoint_works_as_expected_for_scalar_samples"/>
    <testcase time="0.00600000000000023" classname="Model_methods" name="dose_DualEndpoint_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0200000000000014" classname="Model_methods" name="dose_DualEndpoint_works_as_expected_for_vectors"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_DualEndpoint_works_as_expected_for_vectors"/>
    <testcase time="0.0109999999999992" classname="Model_methods" name="dose_DualEndpoint_works_as_expected_for_vectors"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="dose_DualEndpoint_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="dose_DualEndpoint_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_DualEndpoint_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.027000000000001" classname="Model_methods" name="dose_LogisticIndepBeta_works_as_expected"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticIndepBeta_works_as_expected"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="dose_LogisticIndepBeta_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0219999999999985" classname="Model_methods" name="dose_LogisticIndepBeta_works_as_expected_for_vectors"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="dose_LogisticIndepBeta_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="dose_LogisticIndepBeta_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_LogisticIndepBeta_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0350000000000001" classname="Model_methods" name="dose_LogisticIndepBeta_noSamples_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Model_methods" name="dose_LogisticIndepBeta_noSamples_works_as_expected"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="dose_LogisticIndepBeta_noSamples_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="dose_OneParLogNormalPrior_works_as_expected"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="dose_OneParLogNormalPrior_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0140000000000011" classname="Model_methods" name="dose_OneParLogNormalPrior_works_as_expected_for_vectors"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="dose_OneParLogNormalPrior_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="dose_OneParLogNormalPrior_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00799999999999912" classname="Model_methods" name="dose_OneParLogNormalPrior_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="dose_OneParExpPrior_works_as_expected"/>
    <testcase time="0.0130000000000017" classname="Model_methods" name="dose_OneParExpPrior_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="dose_OneParExpPrior_works_as_expected_for_vectors"/>
    <testcase time="0.0199999999999996" classname="Model_methods" name="dose_OneParExpPrior_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="dose_OneParExpPrior_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="dose_OneParExpPrior_throws_the_error_when_x_is_not_valid"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="prob_LogisticNormal_works_as_expected"/>
    <testcase time="0.016" classname="Model_methods" name="prob_LogisticNormal_works_as_expected_for_scalar_samples"/>
    <testcase time="0.016" classname="Model_methods" name="prob_LogisticNormal_works_as_expected_for_vectors"/>
    <testcase time="0.0180000000000007" classname="Model_methods" name="prob_LogisticNormal_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="prob_LogisticNormal_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="prob_LogisticLogNormal_works_as_expected"/>
    <testcase time="0.0179999999999989" classname="Model_methods" name="prob_LogisticLogNormal_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0170000000000012" classname="Model_methods" name="prob_LogisticLogNormal_works_as_expected_for_vectors"/>
    <testcase time="0.0239999999999991" classname="Model_methods" name="prob_LogisticLogNormal_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="prob_LogisticLogNormal_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.016" classname="Model_methods" name="prob_LogisticLogNormalSub_works_as_expected"/>
    <testcase time="0.0149999999999988" classname="Model_methods" name="prob_LogisticLogNormalSub_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="prob_LogisticLogNormalSub_works_as_expected_for_vectors"/>
    <testcase time="0.016" classname="Model_methods" name="prob_LogisticLogNormalSub_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="prob_LogisticLogNormalSub_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="prob_ProbitLogNormal_works_as_expected"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="prob_ProbitLogNormal_works_as_expected_for_scalar_samples"/>
    <testcase time="0.016" classname="Model_methods" name="prob_ProbitLogNormal_works_as_expected_for_vectors"/>
    <testcase time="0.0180000000000007" classname="Model_methods" name="prob_ProbitLogNormal_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.00799999999999912" classname="Model_methods" name="prob_ProbitLogNormal_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0229999999999997" classname="Model_methods" name="prob_ProbitLogNormalRel_works_as_expected"/>
    <testcase time="0.0170000000000012" classname="Model_methods" name="prob_ProbitLogNormalRel_works_as_expected_for_scalar_samples"/>
    <testcase time="0.016" classname="Model_methods" name="prob_ProbitLogNormalRel_works_as_expected_for_vectors"/>
    <testcase time="0.0179999999999989" classname="Model_methods" name="prob_ProbitLogNormalRel_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="prob_ProbitLogNormalRel_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="prob_LogisticKadane_works_as_expected"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="prob_LogisticKadane_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="prob_LogisticKadane_works_as_expected_for_vectors"/>
    <testcase time="0.0140000000000011" classname="Model_methods" name="prob_LogisticKadane_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.00900000000000034" classname="Model_methods" name="prob_LogisticKadane_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0239999999999991" classname="Model_methods" name="prob_LogisticNormalMixture_works_as_expected"/>
    <testcase time="0.0190000000000001" classname="Model_methods" name="prob_LogisticNormalMixture_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0190000000000001" classname="Model_methods" name="prob_LogisticNormalMixture_works_as_expected_for_vectors"/>
    <testcase time="0.0190000000000001" classname="Model_methods" name="prob_LogisticNormalMixture_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.00900000000000034" classname="Model_methods" name="prob_LogisticNormalMixture_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="prob_LogisticNormalFixedMixture_works_as_expected"/>
    <testcase time="0.0229999999999997" classname="Model_methods" name="prob_LogisticNormalFixedMixture_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="prob_LogisticNormalFixedMixture_works_as_expected_for_vectors"/>
    <testcase time="0.0289999999999999" classname="Model_methods" name="prob_LogisticNormalFixedMixture_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.00900000000000034" classname="Model_methods" name="prob_LogisticNormalFixedMixture_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="prob_LogisticLogNormalMixture_works_as_expected"/>
    <testcase time="0.0250000000000004" classname="Model_methods" name="prob_LogisticLogNormalMixture_works_as_expected_for_single_samples"/>
    <testcase time="0.0169999999999995" classname="Model_methods" name="prob_LogisticLogNormalMixture_works_as_expected_for_vectorized_dose_samples"/>
    <testcase time="0.0180000000000007" classname="Model_methods" name="prob_LogisticLogNormalMixture_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.00899999999999856" classname="Model_methods" name="prob_LogisticLogNormalMixture_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0210000000000008" classname="Model_methods" name="prob_DualEndpoint_works_as_expected"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="prob_DualEndpoint_works_as_expected"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="prob_DualEndpoint_works_as_expected"/>
    <testcase time="0.0200000000000014" classname="Model_methods" name="prob_DualEndpoint_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0129999999999999" classname="Model_methods" name="prob_DualEndpoint_works_as_expected_for_scalar_samples"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="prob_DualEndpoint_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0199999999999996" classname="Model_methods" name="prob_DualEndpoint_works_as_expected_for_vectorized_dose_samples"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="prob_DualEndpoint_works_as_expected_for_vectorized_dose_samples"/>
    <testcase time="0.00600000000000023" classname="Model_methods" name="prob_DualEndpoint_works_as_expected_for_vectorized_dose_samples"/>
    <testcase time="0.0179999999999989" classname="Model_methods" name="prob_DualEndpoint_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="prob_DualEndpoint_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0350000000000001" classname="Model_methods" name="prob_LogisticIndepBeta_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Model_methods" name="prob_LogisticIndepBeta_works_as_expected"/>
    <testcase time="0.0220000000000002" classname="Model_methods" name="prob_LogisticIndepBeta_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0280000000000005" classname="Model_methods" name="prob_LogisticIndepBeta_works_as_expected_for_vectors"/>
    <testcase time="0.0229999999999997" classname="Model_methods" name="prob_LogisticIndepBeta_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.00900000000000034" classname="Model_methods" name="prob_LogisticIndepBeta_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0289999999999999" classname="Model_methods" name="prob_LogisticIndepBeta_noSamples_works_as_expected"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="prob_LogisticIndepBeta_noSamples_works_as_expected"/>
    <testcase time="0.0299999999999994" classname="Model_methods" name="prob_LogisticIndepBeta_noSamples_works_as_expected_for_vector_dose"/>
    <testcase time="0.00700000000000145" classname="Model_methods" name="prob_LogisticIndepBeta_noSamples_works_as_expected_for_vector_dose"/>
    <testcase time="0.0239999999999991" classname="Model_methods" name="prob_LogisticIndepBeta_noSamples_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="prob_OneParLogNormalPrior_works_as_expected"/>
    <testcase time="0.0199999999999996" classname="Model_methods" name="prob_OneParLogNormalPrior_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0139999999999993" classname="Model_methods" name="prob_OneParLogNormalPrior_works_as_expected_for_vectors"/>
    <testcase time="0.016" classname="Model_methods" name="prob_OneParLogNormalPrior_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.00900000000000034" classname="Model_methods" name="prob_OneParLogNormalPrior_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="prob_OneParExpPrior_works_as_expected"/>
    <testcase time="0.0149999999999988" classname="Model_methods" name="prob_OneParExpPrior_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0150000000000006" classname="Model_methods" name="prob_OneParExpPrior_works_as_expected_for_vectors"/>
    <testcase time="0.016" classname="Model_methods" name="prob_OneParExpPrior_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0080000000000009" classname="Model_methods" name="prob_OneParExpPrior_throws_the_error_when_dose_is_not_valid"/>
    <testcase time="0.0269999999999992" classname="Model_methods" name="efficacy_Effloglog_works_as_expected"/>
    <testcase time="0.0310000000000006" classname="Model_methods" name="efficacy_Effloglog_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0259999999999998" classname="Model_methods" name="efficacy_Effloglog_works_as_expected_for_vectors"/>
    <testcase time="0.0280000000000005" classname="Model_methods" name="efficacy_Effloglog_throws_the_error_when_dose_and_samples_lengths_differ"/>
    <testcase time="0.0280000000000005" classname="Model_methods" name="efficacy_Effloglog_throws_the_error_when_dose_is_negative"/>
    <testcase time="0.0269999999999992" classname="Model_methods" name="efficacy_Effloglog_throws_the_error_when_sample_parameter_names_are_not_valid"/>
    <testcase time="0.0400000000000009" classname="Model_methods" name="efficacy_Effloglog_noSamples_works_as_expected"/>
    <testcase time="0.00999999999999979" classname="Model_methods" name="efficacy_Effloglog_noSamples_works_as_expected"/>
    <testcase time="0.0359999999999996" classname="Model_methods" name="efficacy_Effloglog_noSamples_works_as_expected_for_vector_dose"/>
    <testcase time="0.00999999999999979" classname="Model_methods" name="efficacy_Effloglog_noSamples_works_as_expected_for_vector_dose"/>
    <testcase time="0.0280000000000005" classname="Model_methods" name="efficacy_Effloglog_noSamples_throws_the_error_when_dose_is_negative"/>
    <testcase time="0.0289999999999999" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected"/>
    <testcase time="0.0570000000000004" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected_dose_interpolation_"/>
    <testcase time="0.032" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected_for_row_samples"/>
    <testcase time="0.0299999999999994" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected_for_row_samples_match_tolerance_"/>
    <testcase time="0.0289999999999999" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected_for_row_samples_dose_interpolation_"/>
    <testcase time="0.0310000000000006" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected_for_vectors"/>
    <testcase time="0.0839999999999996" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected_for_vectors_match_tolerance_"/>
    <testcase time="0.0310000000000006" classname="Model_methods" name="efficacy_EffFlexi_works_as_expected_for_vectors_dose_interpolation_"/>
    <testcase time="0.0329999999999995" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.00799999999999912" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.00999999999999979" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.00700000000000145" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.00999999999999979" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.00699999999999967" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.0120000000000005" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.00799999999999912" classname="Model_methods" name="efficacy_EffFlexi_throws_warning_and_returns_NA_when_dose_is_out_of_dose_grid_range"/>
    <testcase time="0.0339999999999989" classname="Model_methods" name="efficacy_EffFlexi_throws_the_error_when_dose_and_samples_lengths_differ"/>
    <testcase time="0.0289999999999999" classname="Model_methods" name="efficacy_EffFlexi_throws_the_error_when_dose_is_negative"/>
    <testcase time="0.0300000000000011" classname="Model_methods" name="efficacy_EffFlexi_throws_the_error_when_sample_parameter_names_are_not_valid"/>
    <testcase time="0.0180000000000007" classname="Model_methods" name="biomarker_DualEndpoint_works_as_expected"/>
    <testcase time="0.0159999999999982" classname="Model_methods" name="biomarker_DualEndpoint_works_as_expected_for_xLevel_vector"/>
    <testcase time="0.0229999999999997" classname="Model_methods" name="biomarker_DualEndpoint_throws_the_error_when_xLevel_is_not_valid"/>
    <testcase time="0.00900000000000034" classname="Model_methods" name="biomarker_DualEndpoint_throws_the_error_when_xLevel_is_not_valid"/>
    <testcase time="0.0350000000000001" classname="Model_methods" name="gain_ModelTox_ModelEff_works_as_expected"/>
    <testcase time="0.0280000000000022" classname="Model_methods" name="gain_ModelTox_ModelEff_works_as_expected_for_scalar_samples"/>
    <testcase time="0.0269999999999975" classname="Model_methods" name="gain_ModelTox_ModelEff_works_as_expected_for_vectors"/>
    <testcase time="0.0300000000000011" classname="Model_methods" name="gain_ModelTox_ModelEff_throws_the_error_when_dose_is_not_of_valid_length"/>
    <testcase time="0.0350000000000001" classname="Model_methods" name="gain_ModelTox_Effloglog_noSamples_works_as_expected"/>
    <testcase time="0.0399999999999991" classname="Model_methods" name="gain_ModelTox_Effloglog_noSamples_works_as_expected_for_vector_dose"/>
    <testcase time="0.133000000000003" classname="Model_methods" name="update_ModelPseudo_works_as_expected_for_LogisticIndepBeta"/>
    <testcase time="0.0429999999999993" classname="Model_methods" name="update_ModelPseudo_works_as_expected_for_Effloglog">
      <skipped message="Reason: On CRAN ('test-Model-methods.R:1878')"/>
    </testcase>
    <testcase time="0.0649999999999977" classname="Model_methods" name="update_ModelPseudo_works_as_expected_for_EffFlexi">
      <skipped message="Reason: On CRAN ('test-Model-methods.R:1886')"/>
    </testcase>
    <testcase time="0.0360000000000014" classname="Model_methods" name="update_ModelPseudo_throws_the_error_when_data_is_not_an_object_of_Data_class"/>
  </testsuite>
  <testsuite name="Model-validity" timestamp="2023-03-21T15:48:07Z" hostname="7fd809e644a4" tests="144" skipped="12" failures="0" errors="0" time="2.463">
    <testcase time="0.0210000000000008" classname="Model_validity" name="v_general_model_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Model_validity" name="v_general_model_returns_message_for_non_valid_object"/>
    <testcase time="0.00999999999999801" classname="Model_validity" name="v_model_logistic_kadane_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_wrong_theta_probability"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_wrong_theta_probability"/>
    <testcase time="0.00500000000000256" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_wrong_theta_probability"/>
    <testcase time="0.00900000000000034" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_non_scalars"/>
    <testcase time="0.0159999999999982" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_xmin_greater_than_xmax"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_xmin_greater_than_xmax"/>
    <testcase time="0.0110000000000028" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_wrong_theta_probability"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_wrong_theta_probability"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_wrong_theta_probability"/>
    <testcase time="0.0109999999999992" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_xmin_greater_than_xmax"/>
    <testcase time="0.00500000000000256" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_xmin_greater_than_xmax"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_logistic_kadane_returns_message_for_non_scalars"/>
    <testcase time="0.0119999999999969" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_passes_for_valid_object"/>
    <testcase time="0.0160000000000018" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_non_scalars">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:134')"/>
    </testcase>
    <testcase time="0.0189999999999984" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Beta_distribution_shape_parameter_alpha"/>
    <testcase time="0.00500000000000256" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Beta_distribution_shape_parameter_alpha"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Beta_distribution_shape_parameter_beta"/>
    <testcase time="0.00399999999999778" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Beta_distribution_shape_parameter_beta"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Gamma_distribution_shape_parameter"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Gamma_distribution_shape_parameter"/>
    <testcase time="0.0180000000000007" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Gamma_distribution_rate_parameter"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_kadane_beta_gamma_returns_message_for_wrong_Gamma_distribution_rate_parameter"/>
    <testcase time="0.0150000000000006" classname="Model_validity" name="v_model_logistic_normal_mix_passes_for_valid_object"/>
    <testcase time="0.0150000000000006" classname="Model_validity" name="v_model_logistic_normal_mix_returns_message_for_wrong_weightpar"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_normal_mix_returns_message_for_wrong_weightpar"/>
    <testcase time="0.00500000000000256" classname="Model_validity" name="v_model_logistic_normal_mix_returns_message_for_wrong_weightpar"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_normal_mix_returns_message_for_wrong_weightpar"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_normal_mix_returns_message_for_wrong_weightpar"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_logistic_normal_mix_returns_message_for_wrong_weightpar"/>
    <testcase time="0.00500000000000256" classname="Model_validity" name="v_model_logistic_normal_mix_returns_message_for_wrong_weightpar"/>
    <testcase time="0.0219999999999985" classname="Model_validity" name="v_model_logistic_normal_fixed_mix_passes_for_valid_object"/>
    <testcase time="0.0190000000000019" classname="Model_validity" name="v_model_logistic_normal_fixed_mix_returns_message_for_wrong_components"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_logistic_normal_fixed_mix_returns_message_for_non_valid_ModelParamsNormal_comp">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:229')"/>
    </testcase>
    <testcase time="0.0360000000000014" classname="Model_validity" name="v_model_logistic_normal_fixed_mix_returns_message_for_weights_and_comp_of_diff_len"/>
    <testcase time="0.0209999999999972" classname="Model_validity" name="v_model_logistic_normal_fixed_mix_returns_message_for_weights_not_sum_to_1"/>
    <testcase time="0.022000000000002" classname="Model_validity" name="v_model_logistic_normal_fixed_mix_returns_message_for_negative_weights"/>
    <testcase time="0.0219999999999985" classname="Model_validity" name="v_model_logistic_normal_fixed_mix_returns_message_for_non_scalar_log_normal"/>
    <testcase time="0.0130000000000017" classname="Model_validity" name="v_model_logistic_log_normal_mix_passes_for_valid_object"/>
    <testcase time="0.0129999999999981" classname="Model_validity" name="v_model_logistic_log_normal_mix_returns_message_for_wrong_share_weight"/>
    <testcase time="0.00500000000000256" classname="Model_validity" name="v_model_logistic_log_normal_mix_returns_message_for_wrong_share_weight"/>
    <testcase time="0.0189999999999984" classname="Model_validity" name="v_model_dual_endpoint_passes_for_valid_object"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_dual_endpoint_passes_for_valid_object"/>
    <testcase time="0.0130000000000017" classname="Model_validity" name="v_model_dual_endpoint_returns_message_for_wrong_use_log_dose"/>
    <testcase time="0.0229999999999997" classname="Model_validity" name="v_model_dual_endpoint_returns_message_for_wrong_use_fixed">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:319')"/>
    </testcase>
    <testcase time="0.0210000000000008" classname="Model_validity" name="v_model_dual_endpoint_returns_message_for_wrong_fixed_sigma2W"/>
    <testcase time="0.0129999999999981" classname="Model_validity" name="v_model_dual_endpoint_returns_message_for_wrong_sigma2W"/>
    <testcase time="0.0140000000000029" classname="Model_validity" name="v_model_dual_endpoint_returns_message_for_wrong_fixed_rho"/>
    <testcase time="0.0129999999999981" classname="Model_validity" name="v_model_dual_endpoint_returns_message_for_wrong_rho"/>
    <testcase time="0.0330000000000013" classname="Model_validity" name="v_model_dual_endpoint_rw_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_dual_endpoint_rw_passes_for_valid_object"/>
    <testcase time="0.0199999999999996" classname="Model_validity" name="v_model_dual_endpoint_rw_returns_message_for_wrong_use_fixed"/>
    <testcase time="0.0269999999999975" classname="Model_validity" name="v_model_dual_endpoint_rw_returns_message_for_wrong_fixed_sigma2betaW"/>
    <testcase time="0.0190000000000019" classname="Model_validity" name="v_model_dual_endpoint_rw_returns_message_for_wrong_sigma2betaW"/>
    <testcase time="0.036999999999999" classname="Model_validity" name="v_model_dual_endpoint_beta_passes_for_valid_object"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_dual_endpoint_beta_passes_for_valid_object"/>
    <testcase time="0.0260000000000034" classname="Model_validity" name="v_model_dual_endpoint_beta_returns_message_for_wrong_use_fixed">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:430')"/>
    </testcase>
    <testcase time="0.032" classname="Model_validity" name="v_model_dual_endpoint_beta_returns_message_for_wrong_fixed_parameters">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:439')"/>
    </testcase>
    <testcase time="0.0409999999999968" classname="Model_validity" name="v_model_dual_endpoint_beta_returns_message_for_wrong_parameters">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:450')"/>
    </testcase>
    <testcase time="0.0430000000000028" classname="Model_validity" name="v_model_dual_endpoint_emax_passes_for_valid_object"/>
    <testcase time="0.00499999999999901" classname="Model_validity" name="v_model_dual_endpoint_emax_passes_for_valid_object"/>
    <testcase time="0.0259999999999998" classname="Model_validity" name="v_model_dual_endpoint_emax_returns_message_for_wrong_fixed_parameters">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:470')"/>
    </testcase>
    <testcase time="0.0330000000000013" classname="Model_validity" name="v_model_dual_endpoint_emax_returns_message_for_wrong_parameters">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:480')"/>
    </testcase>
    <testcase time="0.0389999999999979" classname="Model_validity" name="v_model_logistic_indep_beta_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_logistic_indep_beta_passes_for_valid_object"/>
    <testcase time="0.0229999999999997" classname="Model_validity" name="v_model_logistic_indep_beta_returns_message_for_wrong_DLE_parameters">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:499')"/>
    </testcase>
    <testcase time="0.0300000000000011" classname="Model_validity" name="v_model_logistic_indep_beta_returns_message_for_wrong_DLE_parameters_diff_len_">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:513')"/>
    </testcase>
    <testcase time="0.0279999999999987" classname="Model_validity" name="v_model_logistic_indep_beta_returns_message_for_wrong_phi_parameters"/>
    <testcase time="0.0190000000000019" classname="Model_validity" name="v_model_logistic_indep_beta_returns_message_for_wrong_Pcov"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_logistic_indep_beta_returns_message_for_wrong_Pcov"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_logistic_indep_beta_returns_message_for_wrong_Pcov"/>
    <testcase time="0.0380000000000003" classname="Model_validity" name="v_model_eff_log_log_passes_for_valid_object"/>
    <testcase time="0.0069999999999979" classname="Model_validity" name="v_model_eff_log_log_passes_for_valid_object"/>
    <testcase time="0.0250000000000021" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_eff_and_eff_dose_parameters_NAs_"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_eff_and_eff_dose_parameters_scalars_"/>
    <testcase time="0.0240000000000009" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_eff_and_eff_dose_parameters_diff_lengths_"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_fixed_nu"/>
    <testcase time="0.0300000000000011" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_nu"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_use_fixed"/>
    <testcase time="0.0240000000000009" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_const"/>
    <testcase time="0.00799999999999912" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_const"/>
    <testcase time="0.0169999999999995" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_dose_const_1_emptydata_"/>
    <testcase time="0.0250000000000021" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_dose_const_1"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_theta1_theta2"/>
    <testcase time="0.0300000000000011" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Pcov"/>
    <testcase time="0.0069999999999979" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Pcov"/>
    <testcase time="0.00700000000000145" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Pcov"/>
    <testcase time="0.0229999999999997" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Pcov_data_len_2_"/>
    <testcase time="0.0180000000000007" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_X_empty_data_"/>
    <testcase time="0.0069999999999979" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_X_empty_data_"/>
    <testcase time="0.0240000000000009" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_X"/>
    <testcase time="0.00700000000000145" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_X"/>
    <testcase time="0.017000000000003" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Y_empty_data_"/>
    <testcase time="0.0309999999999988" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Y"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_mu"/>
    <testcase time="0.0259999999999998" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Q"/>
    <testcase time="0.00800000000000267" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Q"/>
    <testcase time="0.0069999999999979" classname="Model_validity" name="v_model_eff_log_log_returns_message_for_wrong_Q"/>
    <testcase time="0.0330000000000013" classname="Model_validity" name="v_model_eff_flexi_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_eff_flexi_passes_for_valid_object"/>
    <testcase time="0.0299999999999976" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_eff_and_eff_dose_parameters_NAs_"/>
    <testcase time="0.0250000000000021" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_eff_and_eff_dose_parameters_scalars_"/>
    <testcase time="0.0240000000000009" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_eff_and_eff_dose_parameters_diff_lengths_"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_use_fixed"/>
    <testcase time="0.0279999999999987" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_fixed_sigma2W">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:845')"/>
    </testcase>
    <testcase time="0.0390000000000015" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_sigma2W"/>
    <testcase time="0.0289999999999999" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_fixed_sigma2betaW">
      <skipped message="Reason: On CRAN ('test-Model-validity.R:863')"/>
    </testcase>
    <testcase time="0.0330000000000013" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_sigma2betaW"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_rw1"/>
    <testcase time="0.0169999999999995" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_ncol_of_X_empty_data_"/>
    <testcase time="0.0180000000000007" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_X_empty_data_"/>
    <testcase time="0.0300000000000011" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_ncol_of_X"/>
    <testcase time="0.0259999999999998" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_X"/>
    <testcase time="0.0259999999999998" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_RW"/>
    <testcase time="0.0249999999999986" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_RW_RW2_"/>
    <testcase time="0.0259999999999998" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_RW_rank"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_eff_flexi_returns_message_for_wrong_RW_rank"/>
    <testcase time="0.0240000000000009" classname="Model_validity" name="v_model_da_logistic_log_normal_passes_for_valid_object"/>
    <testcase time="0.0169999999999995" classname="Model_validity" name="v_model_da_logistic_log_normal_returns_message_for_wrong_npiece"/>
    <testcase time="0.0169999999999995" classname="Model_validity" name="v_model_da_logistic_log_normal_returns_message_for_wrong_l_vector"/>
    <testcase time="0.00700000000000145" classname="Model_validity" name="v_model_da_logistic_log_normal_returns_message_for_wrong_l_vector"/>
    <testcase time="0.0169999999999995" classname="Model_validity" name="v_model_da_logistic_log_normal_returns_message_for_wrong_c_par"/>
    <testcase time="0.0159999999999982" classname="Model_validity" name="v_model_da_logistic_log_normal_returns_message_for_wrong_cond_pem"/>
    <testcase time="0.0160000000000018" classname="Model_validity" name="v_model_tite_logistic_log_normal_passes_for_valid_object"/>
    <testcase time="0.0159999999999982" classname="Model_validity" name="v_model_tite_logistic_log_normal_returns_message_for_wrong_weight_method"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_tite_logistic_log_normal_returns_message_for_wrong_weight_method"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_one_par_exp_normal_prior_passes_for_valid_object"/>
    <testcase time="0.0180000000000007" classname="Model_validity" name="v_model_one_par_exp_normal_prior_passes_for_valid_object_finit_art._prec._interpolation_"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_one_par_exp_normal_prior_returns_message_for_wrong_skel_fun_skel_fun_inv"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_one_par_exp_normal_prior_returns_message_for_wrong_skel_probs"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_one_par_exp_normal_prior_returns_message_for_wrong_skel_probs"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_one_par_exp_normal_prior_returns_message_for_wrong_skel_probs"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_one_par_exp_normal_prior_returns_message_for_wrong_sigma2"/>
    <testcase time="0.0069999999999979" classname="Model_validity" name="v_model_one_par_exp_normal_prior_returns_message_for_wrong_sigma2"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_one_par_exp_prior_passes_for_valid_object"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_one_par_exp_prior_passes_for_valid_object_finit_art._prec._interpolation_"/>
    <testcase time="0.0120000000000005" classname="Model_validity" name="v_model_one_par_exp_prior_returns_message_for_wrong_skel_fun_skel_fun_inv"/>
    <testcase time="0.0109999999999992" classname="Model_validity" name="v_model_one_par_exp_prior_returns_message_for_wrong_skel_probs"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_one_par_exp_prior_returns_message_for_wrong_skel_probs"/>
    <testcase time="0.00600000000000023" classname="Model_validity" name="v_model_one_par_exp_prior_returns_message_for_wrong_skel_probs"/>
    <testcase time="0.0349999999999966" classname="Model_validity" name="v_model_one_par_exp_prior_returns_message_for_wrong_lambda"/>
    <testcase time="0.00700000000000145" classname="Model_validity" name="v_model_one_par_exp_prior_returns_message_for_wrong_lambda"/>
  </testsuite>
  <testsuite name="ModelParams-class" timestamp="2023-03-21T15:48:10Z" hostname="7fd809e644a4" tests="6" skipped="0" failures="0" errors="0" time="0.034">
    <testcase time="0.0130000000000017" classname="ModelParams_class" name=".ModelParamsNormal_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="ModelParams_class" name=".ModelParamsNormal_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="ModelParams_class" name=".ModelParamsNormal_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="ModelParams_class" name="ModelParamsNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.000999999999997669" classname="ModelParams_class" name="ModelParamsNormal_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="ModelParams_class" name="ModelParamsNormal_object_can_be_created_with_user_constructor"/>
  </testsuite>
  <testsuite name="ModelParams-validity" timestamp="2023-03-21T15:48:10Z" hostname="7fd809e644a4" tests="7" skipped="0" failures="0" errors="0" time="0.079">
    <testcase time="0.0140000000000029" classname="ModelParams_validity" name="v_model_params_normal_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="ModelParams_validity" name="v_model_params_normal_returns_error_for_wrong_mean_and_NA"/>
    <testcase time="0.0109999999999992" classname="ModelParams_validity" name="v_model_params_normal_returns_error_for_cov_with_NA"/>
    <testcase time="0.0109999999999992" classname="ModelParams_validity" name="v_model_params_normal_returns_error_for_prec_with_NA"/>
    <testcase time="0.0100000000000016" classname="ModelParams_validity" name="v_model_params_normal_returns_error_for_wrong_cov"/>
    <testcase time="0.0109999999999992" classname="ModelParams_validity" name="v_model_params_normal_returns_error_for_wrong_prec"/>
    <testcase time="0.0109999999999992" classname="ModelParams_validity" name="v_model_params_normal_returns_error_for_wrong_prec_not_an_inverse_of_cov_"/>
  </testsuite>
  <testsuite name="Rules-class" timestamp="2023-03-21T15:48:10Z" hostname="7fd809e644a4" tests="398" skipped="0" failures="0" errors="0" time="2.716">
    <testcase time="0.0120000000000005" classname="Rules_class" name=".NextBestMTD_works_as_expected"/>
    <testcase time="0.00100000000000122" classname="Rules_class" name=".NextBestMTD_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".NextBestMTD_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="NextBestMTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00100000000000122" classname="Rules_class" name="NextBestMTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestMTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name="NextBestMTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="NextBestMTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".NextBestNCRM_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="Rules_class" name=".NextBestNCRM_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name=".NextBestNCRM_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="NextBestNCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name="NextBestNCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="NextBestNCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestNCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="NextBestNCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="NextBestNCRM_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".NextBestNCRMLoss_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="Rules_class" name=".NextBestNCRMLoss_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".NextBestNCRMLoss_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00200000000000244" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestNCRMLoss_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name=".NextBestThreePlusThree_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name=".NextBestThreePlusThree_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name=".NextBestThreePlusThree_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestThreePlusThree_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name="NextBestThreePlusThree_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="NextBestThreePlusThree_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".NextBestDualEndpoint_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="Rules_class" name=".NextBestDualEndpoint_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name=".NextBestDualEndpoint_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00200000000000244" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor_2"/>
    <testcase time="0.00100000000000122" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor_2"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor_2"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor_2"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor_2"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor_2"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="NextBestDualEndpoint_object_can_be_created_with_user_constructor_2"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="NextBestMinDist_works_as_expected"/>
    <testcase time="0.00100000000000122" classname="Rules_class" name="NextBestMinDist_works_as_expected"/>
    <testcase time="0.00599999999999667" classname="Rules_class" name="NextBestMinDist_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="NextBestMinDist_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name="NextBestMinDist_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestMinDist_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestMinDist_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".NextBestInfTheory_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name=".NextBestInfTheory_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".NextBestInfTheory_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="NextBestInfTheory_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name="NextBestInfTheory_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="NextBestInfTheory_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="NextBestInfTheory_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestInfTheory_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".NextBestTD_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name=".NextBestTD_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".NextBestTD_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="NextBestTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name="NextBestTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0119999999999969" classname="Rules_class" name="NextBestTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestTD_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".NextBestTDsamples_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="Rules_class" name=".NextBestTDsamples_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".NextBestTDsamples_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name="NextBestTDsamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name="NextBestTDsamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="NextBestTDsamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestTDsamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestTDsamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestTDsamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".NextBestMaxGain_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="Rules_class" name=".NextBestMaxGain_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".NextBestMaxGain_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="NextBestMaxGain_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00200000000000244" classname="Rules_class" name="NextBestMaxGain_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="NextBestMaxGain_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestMaxGain_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestMaxGain_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name=".NextBestMaxGainSamples_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name=".NextBestMaxGainSamples_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".NextBestMaxGainSamples_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="Rules_class" name="NextBestMaxGainSamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="NextBestMaxGainSamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="NextBestMaxGainSamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0120000000000005" classname="Rules_class" name="NextBestMaxGainSamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00599999999999667" classname="Rules_class" name="NextBestMaxGainSamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="NextBestMaxGainSamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="NextBestMaxGainSamples_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name=".IncrementsRelative_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name=".IncrementsRelative_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".IncrementsRelative_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="IncrementsRelative_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsRelative_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsRelative_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="IncrementsRelative_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="IncrementsRelative_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="IncrementsRelativeParts_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsRelativeParts_works_as_expected"/>
    <testcase time="0.00599999999999667" classname="Rules_class" name="IncrementsRelativeParts_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name="IncrementsRelativeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsRelativeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsRelativeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="IncrementsRelativeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="IncrementsRelativeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".IncrementsRelativeDLT_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name=".IncrementsRelativeDLT_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".IncrementsRelativeDLT_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name="IncrementsRelativeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00899999999999679" classname="Rules_class" name="IncrementsRelativeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsRelativeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsRelativeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="IncrementsRelativeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="IncrementsRelativeDLTCurrent_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsRelativeDLTCurrent_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="IncrementsRelativeDLTCurrent_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="IncrementsRelativeDLTCurrent_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsRelativeDLTCurrent_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsRelativeDLTCurrent_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="IncrementsRelativeDLTCurrent_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsRelativeDLTCurrent_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".IncrementsNumDoseLevels_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name=".IncrementsNumDoseLevels_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".IncrementsNumDoseLevels_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00199999999999889" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0129999999999981" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsNumDoseLevels_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name=".IncrementsHSRBeta_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name=".IncrementsHSRBeta_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".IncrementsHSRBeta_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="IncrementsHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".IncrementsMin_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".IncrementsMin_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".IncrementsMin_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="IncrementsMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="IncrementsMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="IncrementsMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="IncrementsMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".StoppingCohortsNearDose_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name=".StoppingCohortsNearDose_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".StoppingCohortsNearDose_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00599999999999667" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingCohortsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingPatientsNearDose_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name=".StoppingPatientsNearDose_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name=".StoppingPatientsNearDose_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingPatientsNearDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".StoppingMinCohorts_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name=".StoppingMinCohorts_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name=".StoppingMinCohorts_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingMinCohorts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingMinCohorts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingMinCohorts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingMinCohorts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0160000000000018" classname="Rules_class" name=".StoppingMinPatients_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name=".StoppingMinPatients_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingMinPatients_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingMinPatients_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingMinPatients_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingMinPatients_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingMinPatients_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingTargetProb_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name=".StoppingTargetProb_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".StoppingTargetProb_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingTargetProb_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name="StoppingTargetProb_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingTargetProb_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingTargetProb_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingTargetProb_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingMTDdistribution_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="Rules_class" name=".StoppingMTDdistribution_works_as_expected"/>
    <testcase time="0.0139999999999993" classname="Rules_class" name=".StoppingMTDdistribution_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="StoppingMTDdistribution_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingMTDdistribution_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingMTDdistribution_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingMTDdistribution_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingMTDdistribution_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingMTDdistribution_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingMTDCV_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name=".StoppingMTDCV_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name=".StoppingMTDCV_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor"/>
    <testcase time="0.014999999999997" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingMTDCV_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingLowestDoseHSRBeta_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".StoppingLowestDoseHSRBeta_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name=".StoppingLowestDoseHSRBeta_works_as_expected"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0139999999999993" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingLowestDoseHSRBeta_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".StoppingTargetBiomarker_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name=".StoppingTargetBiomarker_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingTargetBiomarker_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor_default_"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0150000000000006" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name="StoppingTargetBiomarker_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name=".StoppingSpecificDose_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name=".StoppingSpecificDose_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingSpecificDose_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name="StoppingSpecificDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0160000000000018" classname="Rules_class" name=".StoppingHighestDose_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".StoppingHighestDose_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name=".StoppingHighestDose_works_as_expected"/>
    <testcase time="0.00899999999999679" classname="Rules_class" name="StoppingHighestDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00400000000000134" classname="Rules_class" name="StoppingHighestDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingHighestDose_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".StoppingList_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".StoppingList_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name=".StoppingList_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="Rules_class" name="StoppingList_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="StoppingList_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingList_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingList_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingList_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0169999999999995" classname="Rules_class" name=".StoppingAll_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".StoppingAll_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name=".StoppingAll_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="Rules_class" name="StoppingAll_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00399999999999778" classname="Rules_class" name="StoppingAll_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingAll_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingAll_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".StoppingAny_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".StoppingAny_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingAny_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="Rules_class" name="StoppingAny_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="StoppingAny_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingAny_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name="StoppingAny_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0169999999999995" classname="Rules_class" name=".StoppingTDCIRatio_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".StoppingTDCIRatio_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingTDCIRatio_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="StoppingTDCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="StoppingTDCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="StoppingTDCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingTDCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00800000000000267" classname="Rules_class" name="StoppingTDCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".StoppingMaxGainCIRatio_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".StoppingMaxGainCIRatio_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".StoppingMaxGainCIRatio_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="StoppingMaxGainCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="StoppingMaxGainCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0159999999999982" classname="Rules_class" name="StoppingMaxGainCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="StoppingMaxGainCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="StoppingMaxGainCIRatio_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name=".CohortSizeRange_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".CohortSizeRange_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name=".CohortSizeRange_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="CohortSizeRange_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="CohortSizeRange_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeRange_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="CohortSizeRange_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00700000000000145" classname="Rules_class" name="CohortSizeRange_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name=".CohortSizeDLT_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name=".CohortSizeDLT_works_as_expected"/>
    <testcase time="0.0159999999999982" classname="Rules_class" name=".CohortSizeDLT_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="CohortSizeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="CohortSizeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="CohortSizeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="CohortSizeDLT_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name=".CohortSizeConst_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".CohortSizeConst_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".CohortSizeConst_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name="CohortSizeConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="CohortSizeConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="CohortSizeConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0180000000000007" classname="Rules_class" name=".CohortSizeParts_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="Rules_class" name=".CohortSizeParts_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".CohortSizeParts_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="CohortSizeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="CohortSizeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeParts_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".CohortSizeMax_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name=".CohortSizeMax_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".CohortSizeMax_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0159999999999982" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="CohortSizeMax_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name=".CohortSizeMin_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name=".CohortSizeMin_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".CohortSizeMin_works_as_expected"/>
    <testcase time="0.0119999999999969" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00500000000000256" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.022000000000002" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="CohortSizeMin_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name=".SafetyWindowSize_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".SafetyWindowSize_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name=".SafetyWindowSize_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="Rules_class" name="SafetyWindowSize_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name="SafetyWindowSize_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="SafetyWindowSize_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="SafetyWindowSize_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0159999999999982" classname="Rules_class" name="SafetyWindowSize_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="SafetyWindowSize_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="SafetyWindowSize_object_can_be_created_with_user_constructor"/>
    <testcase time="0.0109999999999992" classname="Rules_class" name=".SafetyWindowConst_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="Rules_class" name=".SafetyWindowConst_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name=".SafetyWindowConst_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="Rules_class" name="SafetyWindowConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00600000000000023" classname="Rules_class" name="SafetyWindowConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00999999999999801" classname="Rules_class" name="SafetyWindowConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="SafetyWindowConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00900000000000034" classname="Rules_class" name="SafetyWindowConst_object_can_be_created_with_user_constructor"/>
    <testcase time="0.00799999999999912" classname="Rules_class" name="SafetyWindowConst_object_can_be_created_with_user_constructor"/>
  </testsuite>
  <testsuite name="Rules-methods" timestamp="2023-03-21T15:48:13Z" hostname="7fd809e644a4" tests="107" skipped="24" failures="0" errors="0" time="7.775">
    <testcase time="0.0719999999999992" classname="Rules_methods" name="nextBest_NextBestMTD_returns_correct_next_dose_and_plot"/>
    <testcase time="0.144000000000002" classname="Rules_methods" name="nextBest_NextBestMTD_returns_correct_next_dose_and_plot">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:20')"/>
    </testcase>
    <testcase time="0.0459999999999994" classname="Rules_methods" name="nextBest_NextBestMTD_returns_correct_next_dose_and_plot_no_doselimit_"/>
    <testcase time="0.158000000000001" classname="Rules_methods" name="nextBest_NextBestMTD_returns_correct_next_dose_and_plot_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:38')"/>
    </testcase>
    <testcase time="0.198" classname="Rules_methods" name="nextBest_NextBestNCRM_returns_expected_values_of_the_objects"/>
    <testcase time="0.00799999999999912" classname="Rules_methods" name="nextBest_NextBestNCRM_returns_expected_values_of_the_objects">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:55')"/>
    </testcase>
    <testcase time="0.161999999999999" classname="Rules_methods" name="nextBest_NextBestNCRM_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.00700000000000145" classname="Rules_methods" name="nextBest_NextBestNCRM_returns_expected_values_of_the_objects_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:73')"/>
    </testcase>
    <testcase time="0.181999999999999" classname="Rules_methods" name="nextBest_NextBestNCRM_DataParts_returns_expected_values_of_the_objects"/>
    <testcase time="0.00799999999999912" classname="Rules_methods" name="nextBest_NextBestNCRM_DataParts_returns_expected_values_of_the_objects">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:91')"/>
    </testcase>
    <testcase time="0.167000000000002" classname="Rules_methods" name="nextBest_NextBestNCRM_DataParts_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.0150000000000006" classname="Rules_methods" name="nextBest_NextBestNCRM_DataParts_returns_expected_values_of_the_objects_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:107')"/>
    </testcase>
    <testcase time="0.0359999999999978" classname="Rules_methods" name="nextBest_NextBestNCRM_DataParts_returns_expected_value_for_all_parts_1"/>
    <testcase time="0.00500000000000256" classname="Rules_methods" name="nextBest_NextBestNCRM_DataParts_returns_expected_value_for_all_parts_1"/>
    <testcase time="0.0289999999999999" classname="Rules_methods" name="nextBest_NextBestNCRM_DataParts_throws_the_error_for_all_parts_1_and_no_doselimit"/>
    <testcase time="0.219999999999999" classname="Rules_methods" name="nextBest_NextBestNCRMLoss_returns_expected_values_of_the_objects"/>
    <testcase time="0.00799999999999912" classname="Rules_methods" name="nextBest_NextBestNCRMLoss_returns_expected_values_of_the_objects">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:159')"/>
    </testcase>
    <testcase time="0.257999999999999" classname="Rules_methods" name="nextBest_NextBestNCRMLoss_returns_expected_values_of_the_objects_loss_function_of_4_elements_"/>
    <testcase time="0.00900000000000034" classname="Rules_methods" name="nextBest_NextBestNCRMLoss_returns_expected_values_of_the_objects_loss_function_of_4_elements_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:182')"/>
    </testcase>
    <testcase time="0.205000000000002" classname="Rules_methods" name="nextBest_NextBestNCRMLoss_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.0069999999999979" classname="Rules_methods" name="nextBest_NextBestNCRMLoss_returns_expected_values_of_the_objects_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:198')"/>
    </testcase>
    <testcase time="0.0250000000000021" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_and_escalated_"/>
    <testcase time="0.00399999999999778" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_and_escalated_"/>
    <testcase time="0.0289999999999999" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_max_dose_no_escalation_"/>
    <testcase time="0.00400000000000134" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_max_dose_no_escalation_"/>
    <testcase time="0.0190000000000019" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_and_no_escalation_"/>
    <testcase time="0.00399999999999778" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_and_no_escalation_"/>
    <testcase time="0.0199999999999996" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_"/>
    <testcase time="0.00400000000000134" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_"/>
    <testcase time="0.0199999999999996" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_3_patients_at_last_lev_"/>
    <testcase time="0.00499999999999901" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_3_patients_at_last_lev_"/>
    <testcase time="0.0210000000000008" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_6_patients_at_last_lev_"/>
    <testcase time="0.0109999999999992" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_33_6_patients_at_last_lev_"/>
    <testcase time="0.0210000000000008" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_next_level_0_"/>
    <testcase time="0.00400000000000134" classname="Rules_methods" name="nextBest_NextBestThreePlusThree_returns_expected_values_next_level_0_"/>
    <testcase time="0.175000000000001" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements"/>
    <testcase time="0.00799999999999912" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:280')"/>
    </testcase>
    <testcase time="0.192999999999998" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements_with_Emax_param_"/>
    <testcase time="0.00800000000000267" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements_with_Emax_param_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:298')"/>
    </testcase>
    <testcase time="0.206999999999997" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements_absolute_target_"/>
    <testcase time="0.00800000000000267" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements_absolute_target_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:315')"/>
    </testcase>
    <testcase time="0.177999999999997" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements_absolute_target_no_doselimit_"/>
    <testcase time="0.00799999999999912" classname="Rules_methods" name="nextBest_NextBestDualEndpoint_returns_expected_elements_absolute_target_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:332')"/>
    </testcase>
    <testcase time="0.0690000000000026" classname="Rules_methods" name="nextBest_NextBestMinDist_returns_expected_values_and_plot"/>
    <testcase time="0.00900000000000034" classname="Rules_methods" name="nextBest_NextBestMinDist_returns_expected_values_and_plot">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:348')"/>
    </testcase>
    <testcase time="0.0569999999999986" classname="Rules_methods" name="nextBest_NextBestMinDist_returns_expected_values_and_plot_with_placebo_"/>
    <testcase time="0.00799999999999912" classname="Rules_methods" name="nextBest_NextBestMinDist_returns_expected_values_and_plot_with_placebo_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:362')"/>
    </testcase>
    <testcase time="0.0640000000000001" classname="Rules_methods" name="nextBest_NextBestMinDist_returns_expected_values_and_plot_no_doselimit_"/>
    <testcase time="0.00799999999999912" classname="Rules_methods" name="nextBest_NextBestMinDist_returns_expected_values_and_plot_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:376')"/>
    </testcase>
    <testcase time="0.0340000000000025" classname="Rules_methods" name="nextBest_NextBestInfTheory_returns_correct_next_dose"/>
    <testcase time="0.0269999999999975" classname="Rules_methods" name="nextBest_NextBestInfTheory_returns_correct_next_dose_no_doselimit_"/>
    <testcase time="0.0730000000000004" classname="Rules_methods" name="nextBest_NextBestTDsamples_returns_expected_values_of_the_objects"/>
    <testcase time="0.172000000000001" classname="Rules_methods" name="nextBest_NextBestTDsamples_returns_expected_values_of_the_objects">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:435')"/>
    </testcase>
    <testcase time="0.0680000000000014" classname="Rules_methods" name="nextBest_NextBestTDsamples_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.184999999999999" classname="Rules_methods" name="nextBest_NextBestTDsamples_returns_expected_values_of_the_objects_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:461')"/>
    </testcase>
    <testcase time="0.0689999999999991" classname="Rules_methods" name="nextBest_NextBestTDsamples_returns_expected_values_of_the_objects_other_targets_"/>
    <testcase time="0.0850000000000009" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects"/>
    <testcase time="0.032" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects"/>
    <testcase time="0.178000000000001" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:508')"/>
    </testcase>
    <testcase time="0.102" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.032" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.225999999999999" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:528')"/>
    </testcase>
    <testcase time="0.0760000000000005" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects_other_targets_"/>
    <testcase time="0.0360000000000014" classname="Rules_methods" name="nextBest_NextBestTD_returns_expected_values_of_the_objects_other_targets_"/>
    <testcase time="0.231999999999999" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects"/>
    <testcase time="0.0440000000000005" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects"/>
    <testcase time="0.297999999999998" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:575')"/>
    </testcase>
    <testcase time="0.265000000000001" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.0519999999999996" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.504000000000001" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:601')"/>
    </testcase>
    <testcase time="0.256" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects_other_targets_placebo_"/>
    <testcase time="0.0380000000000003" classname="Rules_methods" name="nextBest_NextBestMaxGain_returns_expected_values_of_the_objects_other_targets_placebo_"/>
    <testcase time="0.0849999999999973" classname="Rules_methods" name="nextBest_NextBestMaxGainSamples_returns_expected_values_of_the_objects"/>
    <testcase time="0.153000000000002" classname="Rules_methods" name="nextBest_NextBestMaxGainSamples_returns_expected_values_of_the_objects">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:664')"/>
    </testcase>
    <testcase time="0.123999999999999" classname="Rules_methods" name="nextBest_NextBestMaxGainSamples_returns_expected_values_of_the_objects_no_doselimit_"/>
    <testcase time="0.166" classname="Rules_methods" name="nextBest_NextBestMaxGainSamples_returns_expected_values_of_the_objects_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-Rules-methods.R:700')"/>
    </testcase>
    <testcase time="0.0940000000000012" classname="Rules_methods" name="nextBest_NextBestMaxGainSamples_returns_expected_values_of_the_objects_other_targets_placebo_"/>
    <testcase time="0.0189999999999984" classname="Rules_methods" name="IncrementsRelative_works_correctly_for_last_dose_in_1st_interval"/>
    <testcase time="0.0249999999999986" classname="Rules_methods" name="IncrementsRelative_works_correctly_for_last_dose_in_2nd_interval"/>
    <testcase time="0.0140000000000029" classname="Rules_methods" name="IncrementsRelative_works_correctly_for_last_dose_in_2nd_interval"/>
    <testcase time="0.0199999999999996" classname="Rules_methods" name="IncrementsRelative_throws_error_when_last_dose_is_below_the_first_interval"/>
    <testcase time="0.0199999999999996" classname="Rules_methods" name="IncrementsRelative_throws_error_when_IncrementsRelative_is_empty"/>
    <testcase time="0.0129999999999981" classname="Rules_methods" name="IncrementsRelative_throws_error_when_Data_is_empty"/>
    <testcase time="0.0450000000000017" classname="Rules_methods" name="IncrementsNumDoseLevels_works_correctly_if_basis_level_last_is_defined"/>
    <testcase time="0.0509999999999984" classname="Rules_methods" name="IncrementsNumDoseLevels_works_correctly_if_basis_level_is_not_defined_and_default_is_used"/>
    <testcase time="0.0450000000000017" classname="Rules_methods" name="IncrementsNumDoseLevels_works_correctly_if_basis_level_max_is_defined"/>
    <testcase time="0.0470000000000006" classname="Rules_methods" name="IncrementsRelativeDLTCurrent_works_correctly"/>
    <testcase time="0.0209999999999972" classname="Rules_methods" name="IncrementsHSRBeta_works_correctly_if_toxcicity_probability_is_below_threshold_probability"/>
    <testcase time="0.0250000000000021" classname="Rules_methods" name="IncrementsHSRBeta_works_correctly_if_toxcicity_probability_is_above_threshold_probability"/>
    <testcase time="0.0210000000000008" classname="Rules_methods" name="IncrementsHSRBeta_works_correctly_if_toxcicity_probability_of_first_active_dose_is_above_threshold_probability"/>
    <testcase time="0.0209999999999972" classname="Rules_methods" name="IncrementsHSRBeta_works_correctly_if_toxcicity_probability_of_placebo_is_above_threshold_probability"/>
    <testcase time="0.0200000000000031" classname="Rules_methods" name="IncrementsHSRBeta_works_correctly_if_toxcicity_probability_of_first_active_dose_is_above_threshold_probability_and_placebo_T_but_not_appplied"/>
    <testcase time="0.0179999999999971" classname="Rules_methods" name="IncrementsHSRBeta_works_correctly_if_toxcicity_probability_of_first_active_dose_is_above_threshold_probability_no_placebo_"/>
    <testcase time="0.0180000000000007" classname="Rules_methods" name="IncrementsHSRBeta_works_correctly_if_toxcicity_probability_is_above_threshold_probability_no_placebo_"/>
    <testcase time="0.0500000000000007" classname="Rules_methods" name="StoppingMTDCV_works_correctly_if_CV_is_below_threshold"/>
    <testcase time="0.0489999999999995" classname="Rules_methods" name="StoppingMTDCV_works_correctly_if_CV_is_above_threshold"/>
    <testcase time="0.032" classname="Rules_methods" name="StoppingLowestDoseHSRBeta_works_correctly_if_first_active_dose_is_not_toxic"/>
    <testcase time="0.0309999999999988" classname="Rules_methods" name="StoppingLowestDoseHSRBeta_works_correctly_if_first_active_dose_is_toxic"/>
    <testcase time="0.0300000000000011" classname="Rules_methods" name="StoppingLowestDoseHSRBeta_works_correctly_if_first_active_dose_is_not_applied"/>
    <testcase time="0.0299999999999976" classname="Rules_methods" name="StoppingLowestDoseHSRBeta_works_correctly_if_first_active_dose_is_not_toxic"/>
    <testcase time="0.0289999999999999" classname="Rules_methods" name="StoppingLowestDoseHSRBeta_works_correctly_if_first_active_dose_is_toxic"/>
    <testcase time="0.0360000000000014" classname="Rules_methods" name="StoppingLowestDoseHSRBeta_works_correctly_if_first_active_dose_is_not_applied"/>
    <testcase time="0.0360000000000014" classname="Rules_methods" name="StoppingSpecificDose_works_correctly_if_dose_rec._differs_from_specific_and_stop_crit._not_met"/>
    <testcase time="0.0329999999999977" classname="Rules_methods" name="StoppingSpecificDose_works_correctly_if_dose_rec._differs_from_specific_and_stop_crit._is_met"/>
    <testcase time="0.0340000000000025" classname="Rules_methods" name="StoppingSpecificDose_works_correctly_if_dose_rec_specific_and_stop_crit._not_met"/>
    <testcase time="0.0359999999999978" classname="Rules_methods" name="StoppingSpecificDose_works_correctly_if_dose_rec._specific_and_stop_crit._is_met"/>
    <testcase time="0.0650000000000013" classname="Rules_methods" name="StoppingSpecificDose_correclty_replaces_next_best_string_with_specific_string"/>
  </testsuite>
  <testsuite name="Rules-validity" timestamp="2023-03-21T15:48:20Z" hostname="7fd809e644a4" tests="318" skipped="0" failures="0" errors="0" time="2.554">
    <testcase time="0.0210000000000008" classname="Rules_validity" name="v_next_best_mtd_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_mtd_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_mtd_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_mtd_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_mtd_returns_message_for_non_valid_target"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_next_best_mtd_returns_message_for_non_valid_derive"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_mtd_returns_message_for_non_valid_derive"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_next_best_ncrm_passes_for_valid_object"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_target"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_target"/>
    <testcase time="0.00400000000000134" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_target"/>
    <testcase time="0.00899999999999679" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_overdose"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.00400000000000134" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_ncrm_loss_passes_for_valid_object"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_next_best_ncrm_loss_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_ncrm_loss_passes_for_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_target"/>
    <testcase time="0.00400000000000134" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_target"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00400000000000134" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_overdose"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_unacceptable"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_unacceptable"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_unacceptable"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_non_valid_unacceptable"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_wrong_overdose_unacceptable_relation"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_wrong_losses"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_wrong_losses"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_ncrm_loss_returns_message_for_wrong_losses"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_dual_endpoint_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_dual_endpoint_passes_for_valid_object"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_next_best_dual_endpoint_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_relative_"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_relative_"/>
    <testcase time="0.00599999999999667" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_relative_"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_relative_"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_absolute_"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_absolute_"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_absolute_"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_relative_flag"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_overdose"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_max_overdose_prob"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_thresh"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_thresh"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_dual_endpoint_returns_message_for_non_valid_target_thresh"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_next_best_min_dist_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_min_dist_returns_message_for_non_valid_target"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_min_dist_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_min_dist_returns_message_for_non_valid_target"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_min_dist_returns_message_for_non_valid_target"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_inf_theory_passes_for_valid_object"/>
    <testcase time="0.014999999999997" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_target"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_target"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_target"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_asymmetry"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_asymmetry"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_asymmetry"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_inf_theory_returns_message_for_non_valid_asymmetry"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_td_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_drt"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_drt"/>
    <testcase time="0.00500000000000256" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_drt"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_drt"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_eot"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_eot"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_eot"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_next_best_td_returns_message_for_non_valid_prob_target_eot"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_next_best_td_samples_passes_for_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_next_best_td_samples_returns_message_for_non_valid_derive"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_td_samples_returns_message_for_non_valid_derive"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_next_best_max_gain_samples_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_next_best_max_gain_samples_returns_message_for_non_valid_derive"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_max_gain_samples_returns_message_for_non_valid_derive"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_next_best_max_gain_samples_returns_message_for_non_valid_mg_derive"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_next_best_max_gain_samples_returns_message_for_non_valid_mg_derive"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_relative_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_relative_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_increments_relative_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_relative_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_relative_returns_message_for_non_valid_increments"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_relative_returns_message_for_non_valid_increments"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_relative_parts_passes_for_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_increments_relative_parts_returns_message_for_non_valid_dlt_start"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_relative_parts_returns_message_for_non_valid_dlt_start"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_increments_relative_parts_returns_message_for_non_valid_clean_start"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_increments_relative_parts_returns_message_for_non_valid_clean_start"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_relative_parts_returns_message_for_non_valid_clean_start"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_relative_dlt_passes_for_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_increments_relative_dlt_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_increments_relative_dlt_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_relative_dlt_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_relative_dlt_returns_message_for_non_valid_increments"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_relative_dlt_returns_message_for_non_valid_increments"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_increments_num_dose_levels_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_num_dose_levels_passes_for_valid_object"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_increments_num_dose_levels_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_num_dose_levels_returns_message_for_non_valid_max_levels"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_num_dose_levels_returns_message_for_non_valid_max_levels"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_num_dose_levels_returns_message_for_non_valid_max_levels"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_increments_num_dose_levels_returns_message_for_non_valid_basis_level"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_increments_num_dose_levels_returns_message_for_non_valid_basis_level"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_num_dose_levels_returns_message_for_non_valid_basis_level"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_increments_hsr_beta_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_hsr_beta_passes_for_valid_object"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_target"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_target"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_target"/>
    <testcase time="0.00499999999999901" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_target"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_beta_parameters"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_increments_hsr_beta_returns_expected_messages_for_non_valid_beta_parameters"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_increments_min_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_increments_min_returns_expected_messages_for_non_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_stopping_cohorts_near_dose_passes_for_valid_object"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_cohorts_near_dose_passes_for_valid_object"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_cohorts_near_dose_passes_for_valid_object"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_cohorts_near_dose_passes_for_valid_object"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_stopping_cohorts_near_dose_returns_message_for_non_valid_nCohorts"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_cohorts_near_dose_returns_message_for_non_valid_nCohorts"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_cohorts_near_dose_returns_message_for_non_valid_nCohorts"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_stopping_cohorts_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_cohorts_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_cohorts_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_cohorts_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_stopping_patients_near_dose_passes_for_valid_object"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_patients_near_dose_passes_for_valid_object"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_patients_near_dose_passes_for_valid_object"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_patients_near_dose_passes_for_valid_object"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_stopping_patients_near_dose_returns_message_for_non_valid_nPatients"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_patients_near_dose_returns_message_for_non_valid_nPatients"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_patients_near_dose_returns_message_for_non_valid_nPatients"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_stopping_patients_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_patients_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_patients_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.0129999999999981" classname="Rules_validity" name="v_stopping_patients_near_dose_returns_message_for_non_valid_percentage"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_stopping_min_cohorts_passes_for_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_stopping_min_cohorts_returns_message_for_non_valid_nCohorts"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_min_cohorts_returns_message_for_non_valid_nCohorts"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_min_cohorts_returns_message_for_non_valid_nCohorts"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_stopping_min_patients_passes_for_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_stopping_min_patients_returns_message_for_non_valid_nPatients"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_min_patients_returns_message_for_non_valid_nPatients"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_min_patients_returns_message_for_non_valid_nPatients"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_target_prob_passes_for_valid_object"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_prob_passes_for_valid_object"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_target"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_target"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_target"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_target"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_prob"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_prob"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_prob"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_prob_returns_message_for_non_valid_prob"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_mtd_distribution_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_target"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_target"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_target"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_target"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_thresh"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_thresh"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_thresh"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_thresh"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_prob"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_prob"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_prob"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_mtd_distribution_returns_message_for_non_valid_prob"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_mtd_cv_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_stopping_mtd_cv_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_target"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_target"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_target"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_target"/>
    <testcase time="0.0169999999999995" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_thresh_cv"/>
    <testcase time="0.00600000000000023" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_thresh_cv"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_thresh_cv"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_thresh_cv"/>
    <testcase time="0.00599999999999667" classname="Rules_validity" name="v_stopping_mtd_cv_returns_message_for_non_valid_thresh_cv"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_stopping_target_biomarker_passes_for_valid_object"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_target_biomarker_passes_for_valid_object"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_stopping_target_biomarker_passes_for_valid_object"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_target_relative_"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_target_relative_"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_target_relative_"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_target_relative_"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_target_absolute_"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_target_absolute_"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_target_absolute_"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_is_relative"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_is_relative"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_target_biomarker_returns_expected_messages_for_non_valid_prob"/>
    <testcase time="0.0129999999999981" classname="Rules_validity" name="v_stopping_list_passes_for_valid_object"/>
    <testcase time="0.0130000000000017" classname="Rules_validity" name="v_stopping_list_returns_expected_messages_for_non_valid_stop_list"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_list_returns_expected_messages_for_non_valid_stop_list"/>
    <testcase time="0.0130000000000017" classname="Rules_validity" name="v_stopping_list_returns_expected_messages_for_non_valid_summary_args_"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_list_returns_expected_messages_for_non_valid_summary_args_"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_list_returns_expected_messages_for_non_valid_summary_args_"/>
    <testcase time="0.0139999999999993" classname="Rules_validity" name="v_stopping_list_returns_expected_messages_for_non_valid_summary_output_"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_list_returns_expected_messages_for_non_valid_summary_output_"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_stopping_all_passes_for_valid_object"/>
    <testcase time="0.0129999999999981" classname="Rules_validity" name="v_stopping_all_returns_expected_messages_for_non_valid_stop_list"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_stopping_all_returns_expected_messages_for_non_valid_stop_list"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_stopping_tdci_ratio_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_stopping_tdci_ratio_passes_for_valid_object"/>
    <testcase time="0.0139999999999993" classname="Rules_validity" name="v_stopping_tdci_ratio_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_stopping_tdci_ratio_returns_message_for_non_valid_target_ratio"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_tdci_ratio_returns_message_for_non_valid_target_ratio"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_tdci_ratio_returns_message_for_non_valid_target_ratio"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_stopping_tdci_ratio_returns_message_for_non_valid_prob_target"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_stopping_tdci_ratio_returns_message_for_non_valid_prob_target"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_stopping_tdci_ratio_returns_message_for_non_valid_prob_target"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_cohort_size_range_passes_for_valid_object"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_cohort_size_range_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_range_passes_for_valid_object"/>
    <testcase time="0.0100000000000016" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_intervals"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_intervals"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_intervals"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_intervals"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_cohort_size_range_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_cohort_size_dlt_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_dlt_passes_for_valid_object"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_cohort_size_dlt_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_dlt_intervals"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_dlt_intervals"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_dlt_intervals"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_dlt_intervals"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_dlt_intervals"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_cohort_size_dlt_returns_message_for_non_valid_cohort_size"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_cohort_size_const_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_const_passes_for_valid_object"/>
    <testcase time="0.0180000000000007" classname="Rules_validity" name="v_cohort_size_const_returns_message_for_non_valid_size"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_const_returns_message_for_non_valid_size"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_cohort_size_const_returns_message_for_non_valid_size"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_cohort_size_parts_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_parts_passes_for_valid_object"/>
    <testcase time="0.0109999999999992" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.0069999999999979" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00700000000000145" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_cohort_size_max_passes_for_valid_object"/>
    <testcase time="0.00999999999999801" classname="Rules_validity" name="v_cohort_size_max_passes_for_valid_object"/>
    <testcase time="0.0130000000000017" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_cohort_size_parts_returns_message_for_non_valid_sizes"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_safety_window_size_passes_for_valid_object"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_safety_window_size_passes_for_valid_object"/>
    <testcase time="0.0130000000000017" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_gap"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_gap"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_gap"/>
    <testcase time="0.00799999999999912" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_gap"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_gap"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_size"/>
    <testcase time="0.00799999999999557" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_size"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_size"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_size"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_size"/>
    <testcase time="0.0139999999999958" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_size"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow"/>
    <testcase time="0.00799999999999557" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow"/>
    <testcase time="0.0109999999999957" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow_min"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow_min"/>
    <testcase time="0.00799999999999557" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow_min"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_size_returns_message_for_non_valid_follow_min"/>
    <testcase time="0.0110000000000028" classname="Rules_validity" name="v_safety_window_const_passes_for_valid_object"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_safety_window_const_passes_for_valid_object"/>
    <testcase time="0.00799999999999557" classname="Rules_validity" name="v_safety_window_const_passes_for_valid_object"/>
    <testcase time="0.0130000000000052" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_gap"/>
    <testcase time="0.00799999999999557" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_gap"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_gap"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_gap"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow"/>
    <testcase time="0.00799999999999557" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow"/>
    <testcase time="0.0120000000000005" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow_min"/>
    <testcase time="0.00799999999999557" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow_min"/>
    <testcase time="0.00800000000000267" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow_min"/>
    <testcase time="0.00900000000000034" classname="Rules_validity" name="v_safety_window_const_returns_message_for_non_valid_follow_min"/>
  </testsuite>
  <testsuite name="Samples-methods" timestamp="2023-03-21T15:48:23Z" hostname="7fd809e644a4" tests="4" skipped="0" failures="0" errors="0" time="0.036">
    <testcase time="0.0180000000000007" classname="Samples_methods" name="size_Samples_returns_correct_number_of_samples"/>
    <testcase time="0.00399999999999778" classname="Samples_methods" name="size_Samples_returns_correct_number_of_samples"/>
    <testcase time="0.00999999999999801" classname="Samples_methods" name="names_Samples_returns_correct_names_of_the_parameters"/>
    <testcase time="0.00400000000000489" classname="Samples_methods" name="names_Samples_returns_correct_names_of_the_parameters"/>
  </testsuite>
  <testsuite name="Validate-class" timestamp="2023-03-21T15:48:23Z" hostname="7fd809e644a4" tests="37" skipped="0" failures="0" errors="0" time="0.167">
    <testcase time="0.00900000000000034" classname="Validate_class" name="Validate_objects_can_be_created_with_default_constructor_Validate"/>
    <testcase time="0.000999999999997669" classname="Validate_class" name="Validate_objects_can_be_created_with_default_constructor_Validate"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Validate_objects_can_be_created_with_default_constructor_Validate"/>
    <testcase time="0.007000000000005" classname="Validate_class" name="Validate_returns_NULL_for_valid_object_or_message_for_inv._obj."/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Validate_returns_NULL_for_valid_object_or_message_for_inv._obj."/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Validate_returns_NULL_for_valid_object_or_message_for_inv._obj."/>
    <testcase time="0.00400000000000489" classname="Validate_class" name="Validate_returns_NULL_for_valid_object_or_message_for_inv._obj."/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Validate_returns_NULL_for_valid_object_or_message_for_inv._obj."/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Validate_returns_NULL_for_valid_object_or_message_for_inv._obj."/>
    <testcase time="0.0110000000000028" classname="Validate_class" name="Validate_returns_NULL_for_valid_object_or_message_for_inv._obj."/>
    <testcase time="0.00500000000000256" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_1_"/>
    <testcase time="0.000999999999997669" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_1_"/>
    <testcase time="0.00499999999999545" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_1_"/>
    <testcase time="0.00200000000000244" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_1_"/>
    <testcase time="0.000999999999997669" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_1_"/>
    <testcase time="0.00500000000000256" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_1_"/>
    <testcase time="0.00800000000000267" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_2_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_2_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_2_"/>
    <testcase time="0.00400000000000489" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_2_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_2_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_2_"/>
    <testcase time="0.00400000000000489" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_2_"/>
    <testcase time="0.0069999999999979" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_3_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_3_"/>
    <testcase time="0.00400000000000489" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_3_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_3_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_3_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_3_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_3_"/>
    <testcase time="0.0069999999999979" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_4_"/>
    <testcase time="0.00400000000000489" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_4_"/>
    <testcase time="0.00499999999999545" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_4_"/>
    <testcase time="0.00400000000000489" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_4_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_4_"/>
    <testcase time="0.00399999999999778" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_4_"/>
    <testcase time="0.00500000000000256" classname="Validate_class" name="Having_a_msg_global_variable_does_not_confuse_the_constructor_4_"/>
  </testsuite>
  <testsuite name="accuracy-published" timestamp="2023-03-21T15:48:23Z" hostname="7fd809e644a4" tests="2" skipped="0" failures="0" errors="0" time="1.105">
    <testcase time="1.098" classname="accuracy_published" name="OneParLogNormalPrior_reproduces_same_numbers_as_in_paper_by_Neuenschwander_et_al."/>
    <testcase time="0.0069999999999979" classname="accuracy_published" name="OneParLogNormalPrior_reproduces_same_numbers_as_in_paper_by_Neuenschwander_et_al."/>
  </testsuite>
  <testsuite name="checkmate" timestamp="2023-03-21T15:48:24Z" hostname="7fd809e644a4" tests="106" skipped="0" failures="0" errors="0" time="0.552">
    <testcase time="0.0120000000000005" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00300000000000011" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_TRUE_as_expected"/>
    <testcase time="0.0069999999999979" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probabilities_returns_error_message_as_expected"/>
    <testcase time="0.0150000000000006" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_probability_returns_TRUE_as_expected"/>
    <testcase time="0.0069999999999979" classname="checkmate" name="check_probability_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_error_message_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_returns_error_message_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_probability_returns_error_message_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_returns_error_message_as_expected"/>
    <testcase time="0.00800000000000267" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_probability_range_returns_TRUE_as_expected"/>
    <testcase time="0.0069999999999979" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_probability_range_returns_error_message_as_expected"/>
    <testcase time="0.00800000000000267" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="checkmate" name="check_length_returns_TRUE_as_expected"/>
    <testcase time="0.00999999999999801" classname="checkmate" name="check_length_returns_error_message_as_expected"/>
    <testcase time="0.0069999999999979" classname="checkmate" name="check_length_returns_error_message_as_expected"/>
    <testcase time="0.00600000000000023" classname="checkmate" name="check_length_returns_error_message_as_expected"/>
    <testcase time="0.007000000000005" classname="checkmate" name="check_length_returns_error_message_as_expected"/>
    <testcase time="0.0069999999999979" classname="checkmate" name="check_length_returns_error_message_as_expected"/>
    <testcase time="0.00799999999999557" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_TRUE_as_expected"/>
    <testcase time="0.00800000000000267" classname="checkmate" name="check_range_returns_TRUE_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_range_returns_TRUE_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_TRUE_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_range_returns_TRUE_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_TRUE_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00999999999999801" classname="checkmate" name="check_range_throws_the_error_as_expected"/>
    <testcase time="0.0069999999999979" classname="checkmate" name="check_range_throws_the_error_as_expected"/>
    <testcase time="0.007000000000005" classname="checkmate" name="check_range_throws_the_error_as_expected"/>
    <testcase time="0.0139999999999958" classname="checkmate" name="check_range_throws_the_error_as_expected"/>
    <testcase time="0.00800000000000267" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00399999999999778" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_range_returns_error_message_as_expected"/>
    <testcase time="0.00800000000000267" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00600000000000023" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00499999999999545" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
    <testcase time="0.00500000000000256" classname="checkmate" name="check_range_returns_error_message_as_expected_when_unique_is_FALSE"/>
  </testsuite>
  <testsuite name="helpers" timestamp="2023-03-21T15:48:25Z" hostname="7fd809e644a4" tests="82" skipped="3" failures="0" errors="0" time="0.902">
    <testcase time="0.0139999999999958" classname="helpers" name="h_all_equivalent_returns_TRUE_for_equivalent_objects"/>
    <testcase time="0.007000000000005" classname="helpers" name="h_all_equivalent_returns_TRUE_for_equivalent_objects"/>
    <testcase time="0.00799999999999557" classname="helpers" name="h_all_equivalent_returns_FALSE_for_non_equivalent_objects"/>
    <testcase time="0.0180000000000007" classname="helpers" name="h_plot_data_df_valid_object_for_sample_Data_object_with_placebo"/>
    <testcase time="0.0189999999999984" classname="helpers" name="h_plot_data_df_returns_valid_object_Data_with_placebo_and_blind."/>
    <testcase time="0.106999999999999" classname="helpers" name="h_plot_data_cohort_lines_works_as_expected">
      <skipped message="Reason: On CRAN ('test-helpers.R:78')"/>
    </testcase>
    <testcase time="0.111000000000004" classname="helpers" name="h_plot_data_cohort_lines_works_as_expected_when_no_placebo">
      <skipped message="Reason: On CRAN ('test-helpers.R:90')"/>
    </testcase>
    <testcase time="0.104999999999997" classname="helpers" name="h_plot_data_cohort_lines_works_as_expected_for_single_cohort">
      <skipped message="Reason: On CRAN ('test-helpers.R:106')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="helpers" name="h_check_fun_formals_returns_TRUE_for_valid_arguments"/>
    <testcase time="0.007000000000005" classname="helpers" name="h_check_fun_formals_returns_FALSE_for_non_valid_arguments"/>
    <testcase time="0.0169999999999959" classname="helpers" name="h_slots_returns_two_slots_as_expected"/>
    <testcase time="0.017000000000003" classname="helpers" name="h_slots_returns_two_slots_as_expected_simplification_ignored_"/>
    <testcase time="0.0169999999999959" classname="helpers" name="h_slots_returns_one_slot_as_expected"/>
    <testcase time="0.017000000000003" classname="helpers" name="h_slots_returns_one_slot_expected_with_simplification_"/>
    <testcase time="0.0189999999999984" classname="helpers" name="h_slots_throws_the_error_for_non_existing_slots"/>
    <testcase time="0.0159999999999982" classname="helpers" name="h_slots_returns_empty_list_for_empty_request"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_slots_returns_empty_list_for_empty_request"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_format_number_works_as_expected"/>
    <testcase time="0.007000000000005" classname="helpers" name="h_format_number_works_as_expected_when_no_change"/>
    <testcase time="0.00900000000000034" classname="helpers" name="h_rapply_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_null_if_na_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_null_if_na_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_null_if_na_works_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers" name="h_null_if_na_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="helpers" name="h_null_if_na_throws_an_error_for_non_atomic_argument"/>
    <testcase time="0.00900000000000034" classname="helpers" name="h_null_if_na_throws_an_error_for_non_scalar_atomic_argument"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_null_if_na_throws_an_error_for_non_scalar_atomic_argument"/>
    <testcase time="0.0150000000000006" classname="helpers" name="h_is_positive_definite_returns_TRUE_for_2x2_positive_definite_matrix"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_is_positive_definite_returns_TRUE_for_3x3_positive_definite_matrix"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_is_positive_definite_returns_FALSE_for_matrix_with_NA"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_is_positive_definite_returns_FALSE_for_non_square_matrix"/>
    <testcase time="0.007000000000005" classname="helpers" name="h_is_positive_definite_returns_FALSE_for_non_symmetric_matrix"/>
    <testcase time="0.00799999999999557" classname="helpers" name="h_is_positive_definite_returns_FALSE_for_not_a_pos_def_matrix"/>
    <testcase time="0.007000000000005" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected_for_duplicated_names"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected_for_duplicated_names"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_TRUE_as_expected_for_duplicated_names"/>
    <testcase time="0.00800000000000267" classname="helpers" name="h_test_named_numeric_returns_FALSE_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_FALSE_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers" name="h_test_named_numeric_returns_FALSE_as_expected"/>
    <testcase time="0.00499999999999545" classname="helpers" name="h_test_named_numeric_returns_FALSE_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers" name="h_test_named_numeric_returns_FALSE_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_test_named_numeric_returns_FALSE_as_expected"/>
    <testcase time="0.00500000000000256" classname="helpers" name="h_test_named_numeric_returns_FALSE_as_expected"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_finite_interval"/>
    <testcase time="0.00500000000000256" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_finite_interval"/>
    <testcase time="0.00499999999999545" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_finite_interval"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_finite_interval"/>
    <testcase time="0.00500000000000256" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_finite_interval"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_non_finite_bound"/>
    <testcase time="0.00500000000000256" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_non_finite_bound"/>
    <testcase time="0.00500000000000256" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_non_finite_bound"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_in_range_returns_expected_vector_of_flags_for_non_finite_bound"/>
    <testcase time="0.00800000000000267" classname="helpers" name="h_in_range_returns_expected_matrix_of_flags"/>
    <testcase time="0.00499999999999545" classname="helpers" name="h_in_range_returns_expected_matrix_of_flags"/>
    <testcase time="0.00400000000000489" classname="helpers" name="h_in_range_returns_expected_matrix_of_flags"/>
    <testcase time="0.00499999999999545" classname="helpers" name="h_in_range_returns_expected_matrix_of_flags"/>
    <testcase time="0.0100000000000051" classname="helpers" name="h_in_range_throws_the_error_message_as_expected"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_in_range_throws_the_error_message_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_in_range_throws_the_error_message_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_in_range_throws_the_error_message_as_expected"/>
    <testcase time="0.0069999999999979" classname="helpers" name="h_in_range_throws_the_error_message_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_in_range_throws_the_error_message_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_in_range_throws_the_error_message_as_expected"/>
    <testcase time="0.00900000000000034" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00499999999999545" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_find_interval_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="helpers" name="h_find_interval_works_as_expected_for_custom_replacement"/>
    <testcase time="0.00399999999999778" classname="helpers" name="h_find_interval_works_as_expected_for_custom_replacement"/>
    <testcase time="0.00600000000000023" classname="helpers" name="h_find_interval_works_as_expected_for_custom_replacement"/>
  </testsuite>
  <testsuite name="helpers_jags" timestamp="2023-03-21T15:48:26Z" hostname="7fd809e644a4" tests="23" skipped="2" failures="0" errors="0" time="0.404">
    <testcase time="0.017000000000003" classname="helpers_jags" name="h_jags_add_dummy_works_as_expected_for_single_observation"/>
    <testcase time="0.0159999999999982" classname="helpers_jags" name="h_jags_add_dummy_works_as_expected_for_single_observation_dummy_"/>
    <testcase time="0.00900000000000034" classname="helpers_jags" name="h_jags_add_dummy_works_as_expected_for_non_single_observation"/>
    <testcase time="0.0109999999999957" classname="helpers_jags" name="h_jags_add_dummy_throws_the_error_for_wrong_slot_name"/>
    <testcase time="0.0210000000000008" classname="helpers_jags" name="h_jags_get_model_inits_works_as_expected_when_no_params_to_init"/>
    <testcase time="0.0219999999999985" classname="helpers_jags" name="h_jags_get_model_inits_works_as_expected_with_params_to_init"/>
    <testcase time="0.0230000000000032" classname="helpers_jags" name="h_jags_get_model_inits_throws_the_error_when_init_does_not_return_list"/>
    <testcase time="0.0210000000000008" classname="helpers_jags" name="h_jags_get_model_inits_truncates_zero_length_elements"/>
    <testcase time="0.0229999999999961" classname="helpers_jags" name="h_jags_get_data_works_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers_jags" name="h_jags_get_data_works_as_expected"/>
    <testcase time="0.0219999999999985" classname="helpers_jags" name="h_jags_get_data_works_as_expected_datanames_and_datanames_prior_redundant_"/>
    <testcase time="0.0219999999999985" classname="helpers_jags" name="h_jags_get_data_works_as_expected_from_prior_"/>
    <testcase time="0.0219999999999985" classname="helpers_jags" name="h_jags_get_data_works_as_expected_from_prior_and_datanames_prior_"/>
    <testcase time="0.0230000000000032" classname="helpers_jags" name="h_jags_get_data_works_with_arguments_to_modelspecs"/>
    <testcase time="0.0240000000000009" classname="helpers_jags" name="h_jags_get_data_throws_the_error_when_modelspecs_does_not_return_list"/>
    <testcase time="0.0229999999999961" classname="helpers_jags" name="h_jags_get_data_removes_ref_dose_from_modelspecs_when_sample_from_from_prior_only"/>
    <testcase time="0.007000000000005" classname="helpers_jags" name="h_jags_join_models_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="helpers_jags" name="h_jags_join_models_works_as_expected_for_empty_model2"/>
    <testcase time="0.00999999999999801" classname="helpers_jags" name="h_jags_join_models_throws_the_error_for_non_braced_expression"/>
    <testcase time="0.0120000000000005" classname="helpers_jags" name="h_jags_write_model_works_as_expected">
      <skipped message="Reason: On CRAN ('test-helpers_jags.R:233')"/>
    </testcase>
    <testcase time="0.0410000000000039" classname="helpers_jags" name="h_jags_write_model_works_as_expected_for_truncation">
      <skipped message="Reason: On CRAN ('test-helpers_jags.R:245')"/>
    </testcase>
    <testcase time="0.0169999999999959" classname="helpers_jags" name="h_jags_extract_samples_works_as_expected_for_vector"/>
    <testcase time="0.0069999999999979" classname="helpers_jags" name="h_jags_extract_samples_works_as_expected_for_matrix"/>
  </testsuite>
  <testsuite name="helpers_model" timestamp="2023-03-21T15:48:26Z" hostname="7fd809e644a4" tests="34" skipped="0" failures="0" errors="0" time="0.278">
    <testcase time="0.0120000000000005" classname="helpers_model" name="h_model_dual_endpoint_sigma2W_updates_model_components_for_fixed_sigma2W"/>
    <testcase time="0.00800000000000267" classname="helpers_model" name="h_model_dual_endpoint_sigma2W_updates_model_components"/>
    <testcase time="0.00900000000000034" classname="helpers_model" name="h_model_dual_endpoint_sigma2W_throws_error_for_non_valid_fixed_sigma2W"/>
    <testcase time="0.0069999999999979" classname="helpers_model" name="h_model_dual_endpoint_sigma2W_throws_error_for_non_valid_fixed_sigma2W"/>
    <testcase time="0.00900000000000034" classname="helpers_model" name="h_model_dual_endpoint_sigma2W_throws_error_for_non_valid_sigma2W"/>
    <testcase time="0.00800000000000267" classname="helpers_model" name="h_model_dual_endpoint_rho_updates_model_components_for_fixed_rho"/>
    <testcase time="0.0069999999999979" classname="helpers_model" name="h_model_dual_endpoint_rho_updates_model_components"/>
    <testcase time="0.00800000000000267" classname="helpers_model" name="h_model_dual_endpoint_rho_throws_error_for_non_valid_fixed_rho"/>
    <testcase time="0.00600000000000023" classname="helpers_model" name="h_model_dual_endpoint_rho_throws_error_for_non_valid_fixed_rho"/>
    <testcase time="0.00499999999999545" classname="helpers_model" name="h_model_dual_endpoint_rho_throws_error_for_non_valid_fixed_rho"/>
    <testcase time="0.00900000000000034" classname="helpers_model" name="h_model_dual_endpoint_rho_throws_error_for_non_valid_rho"/>
    <testcase time="0.0120000000000005" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components_for_fixed_sigma2betaW"/>
    <testcase time="0.00400000000000489" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components_for_fixed_sigma2betaW"/>
    <testcase time="0.0119999999999933" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components"/>
    <testcase time="0.00300000000000011" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components"/>
    <testcase time="0.00399999999999778" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components"/>
    <testcase time="0.00399999999999778" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components"/>
    <testcase time="0.00400000000000489" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components"/>
    <testcase time="0.00399999999999778" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_updates_model_components"/>
    <testcase time="0.0140000000000029" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_throws_error_for_non_valid_fixed_sigma2betaW"/>
    <testcase time="0.00600000000000023" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_throws_error_for_non_valid_fixed_sigma2betaW"/>
    <testcase time="0.0129999999999981" classname="helpers_model" name="h_model_dual_endpoint_sigma2betaW_throws_error_for_non_valid_sigma2betaW"/>
    <testcase time="0.0129999999999981" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components_for_scalar_param"/>
    <testcase time="0.00500000000000256" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components_for_scalar_param"/>
    <testcase time="0.00399999999999778" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components_for_scalar_param"/>
    <testcase time="0.0129999999999981" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components"/>
    <testcase time="0.00400000000000489" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components"/>
    <testcase time="0.00399999999999778" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components"/>
    <testcase time="0.00400000000000489" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components"/>
    <testcase time="0.00399999999999778" classname="helpers_model" name="h_model_dual_endpoint_beta_updates_model_components"/>
    <testcase time="0.0150000000000006" classname="helpers_model" name="h_model_dual_endpoint_beta_throws_error_for_non_valid_param"/>
    <testcase time="0.0150000000000006" classname="helpers_model" name="h_model_dual_endpoint_beta_throws_error_for_non_valid_param_name"/>
    <testcase time="0.0139999999999958" classname="helpers_model" name="h_model_dual_endpoint_beta_throws_error_for_non_valid_param_suffix"/>
    <testcase time="0.0150000000000006" classname="helpers_model" name="h_model_dual_endpoint_beta_throws_error_for_non_valid_priormodel"/>
  </testsuite>
  <testsuite name="helpers_rules" timestamp="2023-03-21T15:48:26Z" hostname="7fd809e644a4" tests="51" skipped="11" failures="0" errors="0" time="3.262">
    <testcase time="0.0130000000000052" classname="helpers_rules" name="h_info_theory_dist_works_as_expected_for_scalars"/>
    <testcase time="0.00799999999999557" classname="helpers_rules" name="h_info_theory_dist_works_as_expected_for_vectors"/>
    <testcase time="0.00800000000000267" classname="helpers_rules" name="h_info_theory_dist_works_as_expected_for_matrices"/>
    <testcase time="0.00900000000000034" classname="helpers_rules" name="h_info_theory_dist_throws_the_error_for_non_conformable_args"/>
    <testcase time="0.00600000000000023" classname="helpers_rules" name="h_info_theory_dist_throws_the_error_for_non_conformable_args"/>
    <testcase time="0.00900000000000034" classname="helpers_rules" name="h_info_theory_dist_throws_the_error_for_wrong_asymmetry"/>
    <testcase time="0.046999999999997" classname="helpers_rules" name="h_next_best_mg_ci_works_as_expected"/>
    <testcase time="0.0360000000000014" classname="helpers_rules" name="h_next_best_mg_ci_works_as_expected_with_placebo_"/>
    <testcase time="0.007000000000005" classname="helpers_rules" name="h_next_best_mg_doses_at_grid_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="helpers_rules" name="h_next_best_mg_doses_at_grid_works_as_expected_small_doselimit_"/>
    <testcase time="0.0069999999999979" classname="helpers_rules" name="h_next_best_mg_doses_at_grid_works_as_expected_small_doselimit_placebo_"/>
    <testcase time="0.0069999999999979" classname="helpers_rules" name="h_next_best_mg_doses_at_grid_works_as_expected_td_mg_"/>
    <testcase time="0.007000000000005" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00400000000000489" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00500000000000256" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00400000000000489" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00500000000000256" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00399999999999778" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00400000000000489" classname="helpers_rules" name="h_next_best_eligible_doses_works_as_expected_no_placebo_"/>
    <testcase time="0.00999999999999801" classname="helpers_rules" name="h_next_best_eligible_doses_throws_the_error_for_empty_dose_grid_or_not_sorted"/>
    <testcase time="0.00600000000000023" classname="helpers_rules" name="h_next_best_eligible_doses_throws_the_error_for_empty_dose_grid_or_not_sorted"/>
    <testcase time="0.308" classname="helpers_rules" name="h_next_best_ncrm_loss_plot_works_as_expected">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:197')"/>
    </testcase>
    <testcase time="0.391999999999996" classname="helpers_rules" name="h_next_best_ncrm_loss_plot_works_as_expected_unacceptable_specified_">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:218')"/>
    </testcase>
    <testcase time="0.308" classname="helpers_rules" name="h_next_best_ncrm_loss_plot_works_as_expected_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:238')"/>
    </testcase>
    <testcase time="0.192" classname="helpers_rules" name="h_next_best_tdsamples_plot_works_as_expected">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:247')"/>
    </testcase>
    <testcase time="0.201000000000001" classname="helpers_rules" name="h_next_best_tdsamples_plot_works_as_expected_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:254')"/>
    </testcase>
    <testcase time="0.0390000000000015" classname="helpers_rules" name="h_next_best_td_plot_works_as_expected"/>
    <testcase time="0.183999999999997" classname="helpers_rules" name="h_next_best_td_plot_works_as_expected">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:263')"/>
    </testcase>
    <testcase time="0.0490000000000066" classname="helpers_rules" name="h_next_best_td_plot_works_as_expected_no_doselimit_"/>
    <testcase time="0.180999999999997" classname="helpers_rules" name="h_next_best_td_plot_works_as_expected_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:270')"/>
    </testcase>
    <testcase time="0.0839999999999961" classname="helpers_rules" name="h_next_best_mg_plot_works_as_expected"/>
    <testcase time="0.290000000000006" classname="helpers_rules" name="h_next_best_mg_plot_works_as_expected">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:283')"/>
    </testcase>
    <testcase time="0.0919999999999987" classname="helpers_rules" name="h_next_best_mg_plot_works_as_expected_no_doselimit_"/>
    <testcase time="0.283999999999999" classname="helpers_rules" name="h_next_best_mg_plot_works_as_expected_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:294')"/>
    </testcase>
    <testcase time="0.189" classname="helpers_rules" name="h_next_best_mgsamples_plot_works_as_expected">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:303')"/>
    </testcase>
    <testcase time="0.192" classname="helpers_rules" name="h_next_best_mgsamples_plot_works_as_expected_no_doselimit_">
      <skipped message="Reason: On CRAN ('test-helpers_rules.R:310')"/>
    </testcase>
  </testsuite>
  <testsuite name="logger" timestamp="2023-03-21T15:48:30Z" hostname="7fd809e644a4" tests="5" skipped="0" failures="0" errors="0" time="0.075">
    <testcase time="0.036999999999999" classname="logger" name="enable_logging_works_as_expected"/>
    <testcase time="0.00999999999999801" classname="logger" name="disable_logging_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="logger" name="is_logging_enabled_works_as_expected"/>
    <testcase time="0.007000000000005" classname="logger" name="is_logging_enabled_works_as_expected"/>
    <testcase time="0.0119999999999933" classname="logger" name="log_trace_works_as_expected"/>
  </testsuite>
  <testsuite name="mcmc" timestamp="2023-03-21T15:48:30Z" hostname="7fd809e644a4" tests="11" skipped="0" failures="0" errors="0" time="0.141">
    <testcase time="0.0130000000000052" classname="mcmc" name="JAGS_model_compile_works_as_expected_for_an_example_model"/>
    <testcase time="0.00300000000000011" classname="mcmc" name="JAGS_model_compile_works_as_expected_for_an_example_model"/>
    <testcase time="0.0309999999999988" classname="mcmc" name="mcmc_GeneralData_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="mcmc" name="mcmc_GeneralData_works_as_expected"/>
    <testcase time="0.00400000000000489" classname="mcmc" name="mcmc_GeneralData_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="mcmc" name="mcmc_GeneralData_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="mcmc" name="mcmc_GeneralData_works_as_expected"/>
    <testcase time="0.0380000000000038" classname="mcmc" name="mcmc_GeneralData_gets_random_results"/>
    <testcase time="0.00399999999999778" classname="mcmc" name="mcmc_GeneralData_gets_random_results"/>
    <testcase time="0.0379999999999967" classname="mcmc" name="mcmc_GeneralData_respects_fixed_RNG_settings"/>
    <testcase time="0.00400000000000489" classname="mcmc" name="mcmc_GeneralData_respects_fixed_RNG_settings"/>
  </testsuite>
  <testsuite name="sas-results-part-1" timestamp="2023-03-21T15:48:30Z" hostname="7fd809e644a4" tests="12" skipped="0" failures="0" errors="0" time="26.338">
    <testcase time="6.169" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_1"/>
    <testcase time="0.768000000000001" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_1"/>
    <testcase time="0.00399999999999778" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_1"/>
    <testcase time="5.736" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_2"/>
    <testcase time="0.475999999999999" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_2"/>
    <testcase time="0.00399999999999778" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_2"/>
    <testcase time="6.125" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_3"/>
    <testcase time="0.788000000000004" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_3"/>
    <testcase time="0.00399999999999778" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_3"/>
    <testcase time="5.773" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_4"/>
    <testcase time="0.484999999999999" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_4"/>
    <testcase time="0.00600000000000023" classname="sas_results_part_1" name="Posterior_summaries_for_probabilities_of_DLT_2_parameter_logistic_model_and_recommended_doses_NCRMLoss_crmPack_vs._SAS_Example_4"/>
  </testsuite>
  <testsuite name="utils" timestamp="2023-03-21T15:48:56Z" hostname="7fd809e644a4" tests="2" skipped="0" failures="0" errors="0" time="0.022">
    <testcase time="0.0150000000000006" classname="utils" name="dapply_returns_valid_object_for_sample_data_for_max_dose_fun"/>
    <testcase time="0.007000000000005" classname="utils" name="dapply_returns_valid_objects_for_sample_data_for_sort_dose_fun"/>
  </testsuite>
</testsuites>
