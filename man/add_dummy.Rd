% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Data-methods.R
\name{add_dummy}
\alias{add_dummy}
\alias{add_dummy,Data-method}
\alias{add_dummy-Data}
\title{Appending a Dummy Number for Selected Slots in Data}
\usage{
add_dummy(object, where, dummy = 0, ...)

\S4method{add_dummy}{Data}(object, where, dummy = 0, ...)
}
\arguments{
\item{object}{(\code{Data})\cr object into which dummy values will be added.}

\item{where}{(\code{character})\cr names of slots in \code{object} to which a \code{dummy}
number will be appended.}

\item{dummy}{(\code{number})\cr a dummy number that will be appended to selected
slots in \code{object}. Default to \code{0}.}

\item{...}{not used.}
}
\value{
A \code{\link{Data}} object with slots updated with dummy number.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

A method that append a dummy value to a given slots in \code{\link{Data}} class object,
if and only if the total number of observations (as indicated by
\code{object@nObs}) equals to \code{1}. Otherwise, the \code{object} is not changed.
}
\note{
The main motivation behind this function is related to the \code{openBUGS}.
If there is only one observation, the data is not passed correctly to
\code{openBUGS}, i.e. e.g. \code{x} and \code{y} are treated like scalars in the data
file. Therefore it is necessary to add dummy values to the vectors in this
case. As we don't change the number of observations (\code{nObs}), this addition
of zeros doesn't affect the results of \code{openBUGS} computations.
}
\examples{
# Create some data of class 'Data'
my_data <- Data(
  x = 0.1,
  y = 0,
  doseGrid = c(0.1, 0.5)
)

my_data_2 <- Data(
  x = c(0.1, 0.5),
  y = c(0, 1),
  doseGrid = c(0.1, 0.5)
)

# Append dummy to `x` and `y`.
add_dummy(my_data, where = c("x", "y"))

# Append dummy to `x` and `y`. No effect as `my_data_2@nObs != 1`.
add_dummy(my_data_2, where = c("x", "y"))
}
