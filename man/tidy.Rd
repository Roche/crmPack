% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/broom-methods.R
\name{tidy}
\alias{tidy}
\alias{tidy,CohortSize-method}
\alias{tidy-CohortSize}
\alias{tidy,CohortSizeMax-method}
\alias{tidy-CohortSizeMax}
\alias{tidy,CohortSizeMin-method}
\alias{tidy-CohortSizeMin}
\alias{tidy,CohortSizeParts-method}
\alias{tidy-CohortSizeParts}
\alias{tidy,Data-method}
\alias{tidy-Data}
\alias{tidy,DataDA-method}
\alias{tidy-DataDA}
\alias{tidy,DataDual-method}
\alias{tidy-DataDual}
\alias{tidy,DataMixture-method}
\alias{tidy-DataMixture}
\alias{tidy,DataParts-method}
\alias{tidy-DataParts}
\alias{tidy,Increments-method}
\alias{tidy-Increments}
\alias{tidy,IncrementsMin-method}
\alias{tidy-IncrementsMin}
\alias{tidy,Stopping-method}
\alias{tidy-Stopping}
\alias{tidy,StoppingAll-method}
\alias{tidy-StoppingAll}
\alias{tidy,StoppingAny-method}
\alias{tidy-StoppingAny}
\alias{tidy,StoppingHighestDose-method}
\alias{tidy-StoppingHighestDose}
\alias{tidy,StoppingList-method}
\alias{tidy-StoppingList}
\title{Conversion of crmPack objects to data.frames/tibbles}
\usage{
tidy(object, ...)

\S4method{tidy}{CohortSize}(object, ...)

\S4method{tidy}{CohortSizeMax}(object, ...)

\S4method{tidy}{CohortSizeMin}(object, ...)

\S4method{tidy}{CohortSizeParts}(object, ...)

\S4method{tidy}{Data}(object, ...)

\S4method{tidy}{DataDA}(object, ...)

\S4method{tidy}{DataDual}(object, ...)

\S4method{tidy}{DataMixture}(object, ...)

\S4method{tidy}{DataParts}(object, ...)

\S4method{tidy}{Increments}(object, ...)

\S4method{tidy}{IncrementsMin}(object, ...)

\S4method{tidy}{Stopping}(object, ...)

\S4method{tidy}{StoppingAll}(object, ...)

\S4method{tidy}{StoppingAny}(object, ...)

\S4method{tidy}{StoppingHighestDose}(object, ...)

\S4method{tidy}{StoppingList}(object, ...)
}
\arguments{
\item{object}{(\code{DataDual})\cr the object to convert}

\item{...}{not used.}
}
\value{
(\code{tbl_df} or named list \link[=of `tbl_df`]{of \code{tbl_df}})
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

A method that converts a crmPack S4 object to a tibble or list of tibbles,
in the style of \code{broom::tidy()}.
}
\examples{
CohortSizeConst(3) \%>\% tidy()
CohortSizeDLT(DLTintervals=0:2, cohortSize=2:0) \%>\% tidy()
CohortSizeParts(sizes=c(1,3)) \%>\%  tidy()
mySize1 <- CohortSizeRange(intervals = c(0, 10), cohortSize = c(1, 3))
mySize2 <- CohortSizeDLT(DLTintervals=c(0, 1), cohortSize=c(1, 3))
mySize <- CohortSizeMax(cohortSizeList=list(mySize1, mySize2))

mySize \%>\% tidy()
mySize <- CohortSizeRange(intervals = c(0, 10), cohortSize = c(1, 3))

mySize \%>\% tidy()
CohortSizeParts(sizes=c(1,3)) \%>\% tidy()
d <- Data(
  doseGrid = c(1, 3, 5, 10, 15, 20, 25, 40, 50, 80, 100),
  x=c(1, 3, 5, 10, 15),
  y=c(0, 0, 0, 0, 1))

d \%>\% tidy()
DataDA(
  u = c(42, 30, 15, 5, 20, 25, 30, 60),
  t0 = c(0, 15, 30, 40, 55, 70, 75, 85),
  Tmax = 60,
  x = c(0.1, 0.5, 1.5, 3, 6, 10, 10, 10),
  y = c(0, 0, 1, 1, 0, 0, 1, 0),
  doseGrid = c(0.1, 0.5, 1.5, 3, 6, seq(from = 10, to = 80, by = 2))
) \%>\%
tidy()
set.seed(123)

myData <- DataDual(
            x=c(0.1,0.5,1.5,3,6,10,10,10),
            y=c(0,0,0,0,0,0,1,0),
            w=rnorm(8),
            doseGrid=c(0.1,0.5,1.5,3,6, seq(from=10,to=80,by=2))
          )

myData \%>\% tidy()
d <- DataMixture(
  xshare= c(rep(10, 4), rep(20, 4), rep(40, 4)),
  yshare= c(rep(0L, 4), rep(0L, 4), rep(0L, 4)),
  ID=1:3,
  cohort=c(1, 1, 2),
  x=c(5, 5, 10),
  y=c(0, 0, 0),
  doseGrid=c(5, 10, 20, 40, 80)
)
d \%>\% tidy()
myData <- DataParts(x=c(0.1,0.5,1.5),
y=c(0,0,0),
doseGrid=c(0.1,0.5,1.5,3,6,
seq(from=10,to=80,by=2)),
part=c(1L,1L,1L),
nextPart=1L,
part1Ladder=c(0.1,0.5,1.5,3,6,10))

myData \%>\% tidy()
IncrementsNumDoseLevels(max_levels=2) \%>\% tidy()
IncrementsRelative(intervals=c(0, 20), increments=c(1, 0.33)) \%>\% tidy()
IncrementsRelativeDLT(dlt_intervals=c(0, 20), increments=c(1, 0.33)) \%>\% tidy()
IncrementsRelativeParts(dlt_start=0, clean_start=1) \%>\% tidy()
myIncrements1 <- IncrementsRelativeDLT(dlt_intervals = c(0, 1, 3), increments = c(1, 0.33, 0.2))
myIncrements2 <- IncrementsRelative(intervals=c(0, 20), increments=c(1, 0.33))

myIncrements1 \%>\%  tidy()
myIncrements2 \%>\%  tidy()

IncrementsMin(increments_list=list(myIncrements1,myIncrements2)) \%>\%  tidy()
StoppingCohortsNearDose(nCohorts = 3, percentage = 0.2) \%>\% tidy()
StoppingGstarCIRatio(targetRatio=5, targetEndOfTrial=0.3) \%>\% tidy()
StoppingMinCohorts(nCohorts = 6) \%>\% tidy()
StoppingMinPatients(nPatients = 20) \%>\% tidy()
StoppingMTDdistribution(target = 0.33, thresh = 0.5, prob = 0.9) \%>\% tidy()
StoppingPatientsNearDose(nPatients = 9, percentage = 0.2) \%>\% tidy()
StoppingTargetBiomarker(target = c(0.9, 1), prob = 0.5) \%>\% tidy()
StoppingTargetProb(target=c(0.2, 0.35), prob=0.5) \%>\% tidy()
StoppingTDCIRatio(targetRatio=5, targetEndOfTrial=0.3) \%>\% tidy()

#
#
# StoppingTargetProb(target=c(0.2, 0.35), prob=0.5) \%>\%
#   tidy() \%>\%
#   tibble::add_column(limit=c("min", "max")) \%>\%
#   tidyr::pivot_wider(names_from=limit, values_from=target)
myStopping1 <- StoppingMinCohorts(nCohorts=3)
myStopping2 <- StoppingTargetProb(target=c(0.2, 0.35), prob=0.5)
myStopping3 <- StoppingMinPatients(nPatients=20)

StoppingAll(stopList=c(myStopping1,myStopping2,myStopping3)) \%>\% tidy()
myStopping1 <- StoppingMinCohorts(nCohorts=3)
myStopping2 <- StoppingTargetProb(target=c(0.2, 0.35), prob=0.5)
myStopping3 <- StoppingMinPatients(nPatients=20)

StoppingAny(stopList=c(myStopping1,myStopping2,myStopping3)) \%>\%  tidy()
StoppingHighestDose() \%>\% tidy()
myStopping1 <- StoppingMinCohorts(nCohorts=3)
myStopping2 <- StoppingTargetProb(target=c(0.2, 0.35), prob=0.5)
myStopping3 <- StoppingMinPatients(nPatients=20)
StoppingList(stopList=c(myStopping1,myStopping2,myStopping3), summary=any) \%>\% tidy()
}
